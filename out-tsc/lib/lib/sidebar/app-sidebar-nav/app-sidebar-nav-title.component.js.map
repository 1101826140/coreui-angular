{"version":3,"file":"app-sidebar-nav-title.component.js","sourceRoot":"","sources":["../../../../../projects/coreui/angular/src/lib/sidebar/app-sidebar-nav/app-sidebar-nav-title.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-nav-title',\r\n  template: '',\r\n})\r\nexport class AppSidebarNavTitleComponent implements OnInit {\r\n  @Input() item: any;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const nativeElement: HTMLElement = this.el.nativeElement;\r\n    const name = this.renderer.createText(this.item.name);\r\n\r\n    if ( this.item.class ) {\r\n      const classes = this.item.class;\r\n      this.renderer.addClass(nativeElement, classes);\r\n    }\r\n\r\n    if ( this.item.wrapper ) {\r\n      const wrapper = this.renderer.createElement(this.item.wrapper.element);\r\n      this.addAttribs(this.item.wrapper.attributes, wrapper);\r\n      this.renderer.appendChild(wrapper, name);\r\n      this.renderer.appendChild(nativeElement, wrapper);\r\n    } else {\r\n      this.renderer.appendChild(nativeElement, name);\r\n    }\r\n  }\r\n\r\n  private addAttribs(attribs, element) {\r\n    if (attribs) {\r\n      for (const attr in attribs) {\r\n        if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\r\n          this.setStyle(attribs[attr], element);\r\n        } else if (attr === 'class') {\r\n          this.addClass(attribs[attr], element);\r\n        } else {\r\n          this.setAttrib(attr, attribs[attr], element);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setStyle(styles, el) {\r\n    for (const style in styles) {\r\n      this.renderer.setStyle(el, style, styles[style] );\r\n    }\r\n  }\r\n\r\n  private addClass(classes, el) {\r\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\r\n    classArray.filter((element) => element.length > 0).forEach(element => {\r\n      this.renderer.addClass(el, element );\r\n    });\r\n  }\r\n\r\n  private setAttrib(key, value, el) {\r\n    this.renderer.setAttribute(el, key, value );\r\n  }\r\n}\r\n"]}