{"version":3,"file":"app-breadcrumb.service.js","sourceRoot":"","sources":["../../src/breadcrumb/app-breadcrumb.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAY,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AACxE,OAAO,0BAA0B,CAAC;;IAOhC,8BAAoB,MAAc,EAAU,KAAqB;QAAjE,iBAwBC;QAxBmB,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAE/D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,YAAY,aAAa,EAA9B,CAA8B,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACjF,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,qBAAI,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI;YAClC,GAAG,GAAG,EAAE,CAAC;YACT,GAAG,CAAC;gBACF,qBAAM,cAAc,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC7C,YAAY,GAAG,IAAI,CAAC;;gBAEpB,cAAc,CAAC,OAAO,CAAC,UAAA,KAAK;oBAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;wBAC/B,qBAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC;wBACrC,GAAG,IAAI,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,EAAZ,CAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACtE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;4BACpB,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI;4BAC1B,GAAG,EAAI,GAAG;yBACX,CAAC,CAAC;wBACH,YAAY,GAAG,KAAK,CAAC;qBACtB;iBACF,CAAC,CAAC;aACJ,QAAQ,YAAY,EAAE;YACvB,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;SACzB,CAAC,CAAC;KACJ;;gBA7BF,UAAU;;;;gBAHF,MAAM;gBAAE,cAAc;;+BAD/B;;SAKa,oBAAoB","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport 'rxjs/add/operator/filter';\n\n@Injectable()\nexport class AppBreadcrumbService {\n\n  public breadcrumbs: Array<Object>;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n\n    this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event) => {\n      this.breadcrumbs = [];\n      let currentRoute = this.route.root,\n      url = '';\n      do {\n        const childrenRoutes = currentRoute.children;\n        currentRoute = null;\n        // tslint:disable-next-line:no-shadowed-variable\n        childrenRoutes.forEach(route => {\n          if (route.outlet === 'primary') {\n            const routeSnapshot = route.snapshot;\n            url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n            this.breadcrumbs.push({\n              label: route.snapshot.data,\n              url:   url\n            });\n            currentRoute = route;\n          }\n        });\n      } while (currentRoute);\n      return this.breadcrumbs;\n    });\n  }\n}\n"]}