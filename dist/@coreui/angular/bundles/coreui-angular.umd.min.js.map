{"version":3,"sources":["ng://@coreui/angular/lib/shared/classes.ts","ng://@coreui/angular/lib/shared/toggle-classes.ts","ng://@coreui/angular/lib/shared/layout/layout.directive.ts","ng://@coreui/angular/lib/shared/layout/layout.module.ts","ng://@coreui/angular/lib/shared/replace.ts","ng://@coreui/angular/lib/aside/app-aside.component.ts","ng://@coreui/angular/lib/aside/app-aside.module.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.service.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.component.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.module.ts","ng://@coreui/angular/lib/footer/app-footer.component.ts","ng://@coreui/angular/lib/footer/app-footer.module.ts","ng://@coreui/angular/lib/header/app-header.component.ts","ng://@coreui/angular/lib/header/app-header.module.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-footer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-form.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-header.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-minimizer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-nav.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.module.ts"],"names":["sidebarCssClasses","asideMenuCssClasses","ToggleClasses","Toggle","ClassNames","Level","indexOf","NewClassNames","slice","map","Class","document","body","classList","contains","remove","add","ClassToggler","renderer","this","prototype","removeClasses","_this","toggleClasses","removeClass","addClass","Injectable","Inject","args","DOCUMENT","Renderer2","SidebarToggleDirective","ngOnInit","bp","breakpoint","toggleOpen","$event","cssClass","preventDefault","Directive","selector","Input","HostListener","SidebarMinimizeDirective","MobileSidebarToggleDirective","hasClass","target","elementClassName","RegExp","test","className","SidebarOffCanvasCloseDirective","toggleClass","elem","newClass","replace","BrandMinimizeDirective","AsideToggleDirective","classToggler","providers","LayoutModule","NgModule","imports","CommonModule","exports","declarations","Replace","el","nativeElement","parentElement","firstChild","insertBefore","removeChild","AppAsideComponent","isFixed","fixed","isOffCanvas","offCanvas","displayBreakpoint","display","ngOnDestroy","Component","template","ElementRef","AppAsideModule","AppBreadcrumbService","router","route","_breadcrumbs","BehaviorSubject","Array","breadcrumbs","asObservable","events","pipe","filter","event","NavigationEnd","subscribe","currentRoute","root","url","childrenRoutes","children","forEach","outlet","routeSnapshot","snapshot","segment","path","join","push","label","data","next","Object","assign","Router","ActivatedRoute","AppBreadcrumbComponent","service","AppBreadcrumbModule","forRoot","config","ngModule","RouterModule","AppFooterComponent","AppFooterModule","AppHeaderComponent","navbarBrandText","icon","text","navbarBrandHref","navbarBrandImg","Boolean","navbarBrand","navbarBrandFull","navbarBrandMinimized","imgSrc","brand","src","imgWidth","width","imgHeight","height","imgAlt","alt","console","log","AppHeaderModule","AppSidebarFooterComponent","AppSidebarFormComponent","AppSidebarHeaderComponent","AppSidebarMinimizerComponent","AppSidebarComponent","isCompact","compact","isMinimized","minimized","fixedPosition","warn","HostBinding","NavDropdownDirective","toggle","NavDropdownToggleDirective","dropdown","LinkAttributesDirective","attribs","appLinkAttributes","attr","setStyle","setAttrib","styles","style","classes","isArray","split","element","key","value","createAttribute","setAttribute","AppSidebarNavComponent","role","isDivider","item","divider","isTitle","title","ngOnChanges","changes","navItemsArray","JSON","parse","stringify","navItems","AppSidebarNavItemComponent","class","isDropdown","thisUrl","isActive","AppSidebarNavLinkComponent","getClasses","disabled","isDisabled","nav-link","btn-link","hasVariant","link","variant","getLinkType","isExternalLink","isBadge","badge","attributes","substring","isIcon","hideMobile","AppSidebarNavDropdownComponent","AppSidebarNavTitleComponent","li","createElement","name","createText","wrapper","appendChild","AppSidebarModule"],"mappings":"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","sourcesContent":["export const sidebarCssClasses: Array<string> = [\r\n  'sidebar-show',\r\n  'sidebar-sm-show',\r\n  'sidebar-md-show',\r\n  'sidebar-lg-show',\r\n  'sidebar-xl-show'\r\n];\r\n\r\nexport const asideMenuCssClasses: Array<string> = [\r\n  'aside-menu-show',\r\n  'aside-menu-sm-show',\r\n  'aside-menu-md-show',\r\n  'aside-menu-lg-show',\r\n  'aside-menu-xl-show'\r\n];\r\n","import {Inject, Injectable, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nconst RemoveClasses = (NewClassNames) => {\n  const MatchClasses = NewClassNames.map((Class) => document.body.classList.contains(Class));\n  return MatchClasses.indexOf(true) !== -1;\n};\n\nexport const ToggleClasses = (Toggle, ClassNames) => {\n  const Level = ClassNames.indexOf(Toggle);\n  const NewClassNames = ClassNames.slice(0, Level + 1);\n\n  if (RemoveClasses(NewClassNames)) {\n    NewClassNames.map((Class) => document.body.classList.remove(Class));\n  } else {\n    document.body.classList.add(Toggle);\n  }\n};\n\n@Injectable()\nexport class ClassToggler {\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) {}\n\n  removeClasses(NewClassNames) {\n    const MatchClasses = NewClassNames.map((Class) => this.document.body.classList.contains(Class));\n    return MatchClasses.indexOf(true) !== -1;\n  }\n\n  toggleClasses(Toggle, ClassNames) {\n    const Level = ClassNames.indexOf(Toggle);\n    const NewClassNames = ClassNames.slice(0, Level + 1);\n\n    if (this.removeClasses(NewClassNames)) {\n      NewClassNames.map((Class) => this.renderer.removeClass(this.document.body, Class));\n    } else {\n      this.renderer.addClass(this.document.body, Toggle);\n    }\n  }\n}\n","import {Directive, HostListener, Inject, Input, OnInit, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport { asideMenuCssClasses, sidebarCssClasses } from '../classes';\nimport { ClassToggler, ToggleClasses } from '../toggle-classes';\n\n/**\n* Allows the sidebar to be toggled via click.\n*/\n@Directive({\n  selector: '[appSidebarToggler]'\n})\nexport class SidebarToggleDirective implements OnInit {\n  @Input('appSidebarToggler') breakpoint: string;\n  public bp;\n  constructor() {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    let cssClass;\n    this.bp ? cssClass = `sidebar-${this.bp}-show` : cssClass = sidebarCssClasses[0];\n    ToggleClasses(cssClass, sidebarCssClasses);\n  }\n}\n\n@Directive({\n  selector: '[appSidebarMinimizer]'\n})\nexport class SidebarMinimizeDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('sidebar-minimized') ?\n      this.renderer.removeClass(body, 'sidebar-minimized') :\n      this.renderer.addClass(body, 'sidebar-minimized');\n    // document.body.classList.toggle('sidebar-minimized');\n  }\n}\n\n@Directive({\n  selector: '[appMobileSidebarToggler]'\n})\nexport class MobileSidebarToggleDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('sidebar-show') ?\n      this.renderer.removeClass(body, 'sidebar-show') :\n      this.renderer.addClass(body, 'sidebar-show');\n    // document.body.classList.toggle('sidebar-show');\n  }\n}\n\n/**\n* Allows the off-canvas sidebar to be closed via click.\n*/\n@Directive({\n  selector: '[appSidebarClose]'\n})\nexport class SidebarOffCanvasCloseDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  // Toggle element class\n  private toggleClass(elem: any, elementClassName: string) {\n    let newClass = ' ' + elem.className.replace( /[\\t\\r\\n]/g, ' ' ) + ' ';\n    if (this.hasClass(elem, elementClassName)) {\n      while (newClass.indexOf(' ' + elementClassName + ' ') >= 0 ) {\n        newClass = newClass.replace( ' ' + elementClassName + ' ' , ' ' );\n      }\n      elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n    } else {\n      elem.className += ' ' + elementClassName;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n\n    const body = this.document.body;\n    if (this.hasClass(body, 'sidebar-off-canvas')) {\n      body.classList.contains('sidebar-show') ?\n        this.renderer.removeClass(body, 'sidebar-show') :\n        this.renderer.addClass(body, 'sidebar-show');\n      // this.toggleClass(document.body, 'sidebar-opened');\n    }\n  }\n}\n\n@Directive({\n  selector: '[appBrandMinimizer]'\n})\nexport class BrandMinimizeDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('brand-minimized') ?\n      this.renderer.removeClass(body, 'brand-minimized') :\n      this.renderer.addClass(body, 'brand-minimized');\n    // document.body.classList.toggle('brand-minimized');\n  }\n}\n\n\n/**\n* Allows the aside to be toggled via click.\n*/\n@Directive({\n  selector: '[appAsideMenuToggler]',\n  providers: [ClassToggler]\n})\nexport class AsideToggleDirective implements OnInit {\n  @Input('appAsideMenuToggler') breakpoint: string;\n  public bp;\n  constructor(private classToggler: ClassToggler) {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const cssClass = this.bp ? `aside-menu-${this.bp}-show` : asideMenuCssClasses[0];\n    this.classToggler.toggleClasses(cssClass, asideMenuCssClasses);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport {\n  AsideToggleDirective,\n  BrandMinimizeDirective,\n  MobileSidebarToggleDirective,\n  SidebarToggleDirective,\n  SidebarMinimizeDirective,\n  SidebarOffCanvasCloseDirective\n} from './layout.directive';\nimport { ClassToggler } from '../toggle-classes';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AsideToggleDirective,\n    BrandMinimizeDirective,\n    MobileSidebarToggleDirective,\n    SidebarToggleDirective,\n    SidebarMinimizeDirective,\n    SidebarOffCanvasCloseDirective\n  ],\n  declarations: [\n    AsideToggleDirective,\n    BrandMinimizeDirective,\n    MobileSidebarToggleDirective,\n    SidebarToggleDirective,\n    SidebarMinimizeDirective,\n    SidebarOffCanvasCloseDirective\n  ],\n  providers: [\n    ClassToggler\n  ]\n})\nexport class LayoutModule { }\n","export function Replace(el: any): any {\r\n  const nativeElement: HTMLElement = el.nativeElement;\r\n  const parentElement: HTMLElement = nativeElement.parentElement;\r\n  // move all children out of the element\r\n  while (nativeElement.firstChild) {\r\n    parentElement.insertBefore(nativeElement.firstChild, nativeElement);\r\n  }\r\n  // remove the empty element(the host)\r\n  parentElement.removeChild(nativeElement);\r\n}\r\n","import {Component, ElementRef, Input, OnInit, OnDestroy, Inject, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport { asideMenuCssClasses, Replace } from '../shared';\n\n@Component({\n  selector: 'app-aside',\n  template: `\n    <aside class=\"aside-menu\">\n      <ng-content></ng-content>\n    </aside>\n  `\n})\nexport class AppAsideComponent implements OnInit, OnDestroy {\n  @Input() display: any;\n  @Input() fixed: boolean;\n  @Input() offCanvas: boolean;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n    this.isOffCanvas(this.offCanvas);\n    this.displayBreakpoint(this.display);\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, 'aside-menu-fixed');\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, 'aside-menu-fixed');\n    }\n  }\n\n  isOffCanvas(offCanvas: boolean = this.offCanvas): void {\n    if (offCanvas) {\n      this.renderer.addClass(this.document.body, 'aside-menu-off-canvas');\n    }\n  }\n\n  displayBreakpoint(display: any = this.display): void {\n    if (display !== false ) {\n      const cssClass = this.display ? `aside-menu-${this.display}-show` : asideMenuCssClasses[0];\n      this.renderer.addClass(this.document.body, cssClass);\n    }\n  }\n}\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\nimport { AppAsideComponent } from './app-aside.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppAsideComponent,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppAsideComponent\r\n  ]\r\n})\r\nexport class AppAsideModule {}\r\n","import { Injectable } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs/index';\nimport { filter } from 'rxjs/operators';\n\n@Injectable()\nexport class AppBreadcrumbService {\n\n  breadcrumbs: Observable<Array<Object>>;\n\n  private _breadcrumbs: BehaviorSubject<Array<Object>>;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n\n    this._breadcrumbs = new BehaviorSubject<Object[]>(new Array<Object>());\n\n    this.breadcrumbs = this._breadcrumbs.asObservable();\n\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event) => {\n      const breadcrumbs = [];\n      let currentRoute = this.route.root,\n      url = '';\n      do {\n        const childrenRoutes = currentRoute.children;\n        currentRoute = null;\n        // tslint:disable-next-line:no-shadowed-variable\n        childrenRoutes.forEach(route => {\n          if (route.outlet === 'primary') {\n            const routeSnapshot = route.snapshot;\n            url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n            breadcrumbs.push({\n              label: route.snapshot.data,\n              url:   url\n            });\n            currentRoute = route;\n          }\n        });\n      } while (currentRoute);\n\n      this._breadcrumbs.next(Object.assign([], breadcrumbs));\n\n      return breadcrumbs;\n    });\n  }\n}\n","import {Component, ElementRef, Inject, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {AppBreadcrumbService} from './app-breadcrumb.service';\nimport {Replace} from '../shared';\n\n@Component({\n  selector: 'app-breadcrumb',\n  template: `\n    <ng-template ngFor let-breadcrumb [ngForOf]=\"breadcrumbs | async\" let-last = last>\n      <li class=\"breadcrumb-item\"\n          *ngIf=\"breadcrumb.label.title && (breadcrumb.url.slice(-1) == '/' || last)\"\n          [ngClass]=\"{active: last}\">\n        <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</a>\n        <span *ngIf=\"last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</span>\n      </li>\n    </ng-template>\n  `\n})\nexport class AppBreadcrumbComponent implements OnInit, OnDestroy {\n  @Input() fixed: boolean;\n  public breadcrumbs;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    public service: AppBreadcrumbService,\n    public el: ElementRef\n  ) { }\n\n  public ngOnInit(): void {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n    this.breadcrumbs = this.service.breadcrumbs;\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, 'breadcrumb-fixed');\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, 'breadcrumb-fixed');\n    }\n  }\n}\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule, ModuleWithProviders} from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// App Breadcrumb Component\r\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\r\nimport { AppBreadcrumbComponent } from './app-breadcrumb.component';\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [ CommonModule, RouterModule ],\r\n  exports: [ AppBreadcrumbComponent ],\r\n  declarations: [ AppBreadcrumbComponent ]\r\n})\r\nexport class AppBreadcrumbModule {\r\n  static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: AppBreadcrumbModule,\r\n      providers: [\r\n        AppBreadcrumbService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {Component, ElementRef, Inject, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {Replace} from '../shared';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n    <ng-container class=\"app-footer\"></ng-container>\n    <footer class=\"app-footer\">\n      <ng-content></ng-content>\n    </footer>\n  `\n})\nexport class AppFooterComponent implements OnInit, OnDestroy {\n  @Input() fixed: boolean;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, 'footer-fixed');\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, 'footer-fixed');\n    }\n  }\n}\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppFooterComponent } from './app-footer.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  exports: [ AppFooterComponent ],\r\n  declarations: [ AppFooterComponent ]\r\n})\r\nexport class AppFooterModule {}\r\n","import { Component, ElementRef, Input, OnInit, OnDestroy, Inject, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Replace } from '../shared';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <header class=\"app-header navbar\">\n      <ng-template [ngIf]=\"mobileSidebarToggler != false\">\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appSidebarToggler>\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n        <a class=\"navbar-brand\" [href]=\"navbarBrandHref\">\n          <ng-template [ngIf]=\"navbarBrandImg\">\n          <img *ngIf=\"navbarBrand\"\n               [src]=\"imgSrc(navbarBrand)\"\n               [attr.width]=\"imgWidth(navbarBrand)\"\n               [attr.height]=\"imgHeight(navbarBrand)\"\n               [attr.alt]=\"imgAlt(navbarBrand)\"\n               class=\"navbar-brand\">\n          <img *ngIf=\"navbarBrandFull\"\n               [src]=\"imgSrc(navbarBrandFull)\"\n               [attr.width]=\"imgWidth(navbarBrandFull)\"\n               [attr.height]=\"imgHeight(navbarBrandFull)\"\n               [attr.alt]=\"imgAlt(navbarBrandFull)\"\n               class=\"navbar-brand-full\">\n          <img *ngIf=\"navbarBrandMinimized\"\n               [src]=\"imgSrc(navbarBrandMinimized)\"\n               [attr.width]=\"imgWidth(navbarBrandMinimized)\"\n               [attr.height]=\"imgHeight(navbarBrandMinimized)\"\n               [attr.alt]=\"imgAlt(navbarBrandMinimized)\"\n               class=\"navbar-brand-minimized\">\n          </ng-template>\n          <ng-template [ngIf]=\"!navbarBrandImg\">\n            <div class=\"navbar-brand-full\" [innerHTML]=\"navbarBrandText.text\"></div>\n            <div class=\"navbar-brand-minimized\" [innerHTML]=\"navbarBrandText.icon\"></div>\n          </ng-template>\n        </a>\n      <ng-template [ngIf]=\"sidebarToggler != false\">\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appSidebarToggler]=\"sidebarToggler\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-content></ng-content>\n      <ng-template [ngIf]=\"asideMenuToggler != false\">\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appAsideMenuToggler]=\"asideMenuToggler\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-template [ngIf]=\"mobileAsideMenuToggler != false\">\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appAsideMenuToggler>\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n    </header>\n  `\n})\nexport class AppHeaderComponent implements OnInit, OnDestroy {\n\n  @Input() fixed: boolean;\n\n  @Input() navbarBrand: any;\n  @Input() navbarBrandFull: any;\n  @Input() navbarBrandMinimized: any;\n  @Input() navbarBrandText: any = {icon: 'ð²', text: 'ð² CoreUI'};\n  @Input() navbarBrandHref: any = '';\n\n  @Input() sidebarToggler: any;\n  @Input() mobileSidebarToggler: any;\n\n  @Input() asideMenuToggler: any;\n  @Input() mobileAsideMenuToggler: any;\n\n  navbarBrandImg: boolean;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n    this.navbarBrandImg = Boolean(this.navbarBrand || this.navbarBrandFull || this.navbarBrandMinimized);\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, 'header-fixed');\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, 'header-fixed');\n    }\n  }\n\n  imgSrc(brand: any): void {\n    return brand.src ? brand.src : '';\n  }\n\n  imgWidth(brand: any): void {\n    return brand.width ? brand.width : 'auto';\n  }\n\n  imgHeight(brand: any): void {\n    return brand.height ? brand.height : 'auto';\n  }\n\n  imgAlt(brand: any): void {\n    return brand.alt ? brand.alt : '';\n  }\n\n  breakpoint(breakpoint: any): void {\n    console.log(breakpoint);\n    return breakpoint ? breakpoint : '';\n  }\n}\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\nimport { AppHeaderComponent } from './app-header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppHeaderComponent,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppHeaderComponent\r\n  ]\r\n})\r\nexport class AppHeaderModule {}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\n\nimport { Replace } from '../shared';\n\n@Component({\n  selector: 'app-sidebar-footer',\n  template: `\n    <div class=\"sidebar-footer\">\n      <ng-content></ng-content>\n    </div>`\n})\nexport class AppSidebarFooterComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\n\nimport { Replace } from '../shared';\n\n@Component({\n  selector: 'app-sidebar-form',\n  template: `\n    <form class=\"sidebar-form\">\n      <ng-content></ng-content>\n    </form>\n  `\n})\nexport class AppSidebarFormComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\n\nimport { Replace } from '../shared';\n\n@Component({\n  selector: 'app-sidebar-header',\n  template: `\n    <div class=\"sidebar-header\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class AppSidebarHeaderComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\n\nimport { Replace } from '../shared';\n\n@Component({\n  selector: 'app-sidebar-minimizer',\n  template: `\n    <button class=\"sidebar-minimizer\" type=\"button\" appSidebarMinimizer appBrandMinimizer></button>\n  `\n})\nexport class AppSidebarMinimizerComponent implements OnInit {\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n","import { Component, Input, Inject, HostBinding, OnInit, OnDestroy, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { sidebarCssClasses } from '../shared';\n\n@Component({\n  selector: 'app-sidebar',\n  template: `<ng-content></ng-content>`\n})\nexport class AppSidebarComponent implements OnInit, OnDestroy {\n  @Input() compact: boolean;\n  @Input() display: any;\n  @Input() fixed: boolean;\n  @Input() minimized: boolean;\n  @Input() offCanvas: boolean;\n\n  @HostBinding('class.sidebar') true;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.displayBreakpoint(this.display);\n    this.isCompact(this.compact);\n    this.isFixed(this.fixed);\n    this.isMinimized(this.minimized);\n    this.isOffCanvas(this.offCanvas);\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, 'sidebar-fixed' );\n  }\n\n  isCompact(compact: boolean = this.compact): void {\n    if (compact) {\n      this.renderer.addClass(this.document.body, 'sidebar-compact' );\n    }\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, 'sidebar-fixed');\n    }\n  }\n\n  isMinimized(minimized: boolean = this.minimized): void {\n    if (minimized) {\n      this.renderer.addClass(this.document.body, 'sidebar-minimized');\n    }\n  }\n\n  isOffCanvas(offCanvas: boolean = this.offCanvas): void {\n    if (offCanvas) {\n      this.renderer.addClass(this.document.body, 'sidebar-off-canvas');\n    }\n  }\n\n  fixedPosition(fixed: boolean = this.fixed): void {\n    console.warn('deprecated fixedPosition(), use isFixed() instead');\n    if (fixed) {\n      this.renderer.addClass(this.document.body, 'sidebar-fixed');\n    }\n  }\n\n  displayBreakpoint(display: any = this.display): void {\n    if (display !== false) {\n      const cssClass = display ? `sidebar-${display}-show` : sidebarCssClasses[0];\n      this.renderer.addClass(this.document.body, cssClass);\n    }\n  }\n}\n","import {\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener, Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport {DOCUMENT} from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { Replace } from '../shared';\n\n@Directive({\n  selector: '[appNavDropdown]'\n})\nexport class NavDropdownDirective {\n\n  constructor(private el: ElementRef) { }\n\n  toggle() {\n    this.el.nativeElement.classList.toggle('open');\n  }\n}\n\n/**\n* Allows the dropdown to be toggled via click.\n*/\n@Directive({\n  selector: '[appNavDropdownToggle]'\n})\nexport class NavDropdownToggleDirective {\n  constructor(private dropdown: NavDropdownDirective) {}\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    this.dropdown.toggle();\n  }\n}\n\n@Directive({\n  selector: '[appLinkAttributes]'\n})\nexport class LinkAttributesDirective implements OnInit {\n  @Input() appLinkAttributes: {[key: string]: string };\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit() {\n    const attribs = this.appLinkAttributes;\n    for (const attr in attribs) {\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\n        this.setStyle(attribs[attr]);\n      } else if (attr === 'class') {\n        this.addClass(attribs[attr]);\n      } else {\n        this.setAttrib(attr, attribs[attr]);\n      }\n    }\n  }\n\n  private setStyle(styles) {\n    for (const style in styles) {\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\n    }\n  }\n\n  private addClass(classes) {\n    const classArray = Array.isArray(classes) ? classes : classes.split(' ');\n    classArray.forEach(element => {\n      this.renderer.addClass(this.el.nativeElement, element );\n    });\n  }\n\n  private setAttrib(key, value) {\n    const newAttr = this.document.createAttribute(key);\n    newAttr.value = value;\n    this.renderer.setAttribute(this.el.nativeElement, key, value );\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav',\n  template: `\n    <ul class=\"nav\">\n      <ng-template ngFor let-navitem [ngForOf]=\"navItems\">\n        <li *ngIf=\"isDivider(navitem)\" class=\"nav-divider\"></li>\n        <ng-template [ngIf]=\"isTitle(navitem)\">\n          <app-sidebar-nav-title [title]='navitem'></app-sidebar-nav-title>\n        </ng-template>\n        <ng-template [ngIf]=\"!isDivider(navitem)&&!isTitle(navitem)\">\n          <app-sidebar-nav-item [item]='navitem'></app-sidebar-nav-item>\n        </ng-template>\n      </ng-template>\n    </ul>`\n})\nexport class AppSidebarNavComponent implements OnChanges {\n  @Input() navItems: Array<any>;\n\n  @HostBinding('class.sidebar-nav') true;\n  @HostBinding('attr.role') role = 'nav';\n\n  public navItemsArray: Array<any>;\n\n  public isDivider(item) {\n    return item.divider ? true : false;\n  }\n\n  public isTitle(item) {\n    return item.title ? true : false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.navItemsArray = JSON.parse(JSON.stringify(this.navItems));\n  }\n\n  constructor() { }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-item',\n  template: `\n    <li *ngIf=\"!isDropdown(); else dropdown\" [ngClass]=\"hasClass() ? 'nav-item ' + item.class : 'nav-item'\">\n      <app-sidebar-nav-link [link]='item'></app-sidebar-nav-link>\n    </li>\n    <ng-template #dropdown>\n      <li [ngClass]=\"hasClass() ? 'nav-item nav-dropdown ' + item.class : 'nav-item nav-dropdown'\"\n          [class.open]=\"isActive()\"\n          routerLinkActive=\"open\"\n          appNavDropdown>\n        <app-sidebar-nav-dropdown [link]='item'></app-sidebar-nav-dropdown>\n      </li>\n    </ng-template>\n    `\n})\nexport class AppSidebarNavItemComponent implements OnInit {\n  @Input() item: any;\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  public hasClass() {\n    return this.item.class ? true : false;\n  }\n\n  public isDropdown() {\n    return this.item.children ? true : false;\n  }\n\n  public thisUrl() {\n    return this.item.url;\n  }\n\n  public isActive() {\n    return this.router.isActive(this.thisUrl(), false);\n  }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-link',\n  template: `\n    <ng-container [ngSwitch]=\"getLinkType()\">\n      <a *ngSwitchCase=\"'disabled'\"\n      [attr.disabled]=\"true\"\n      [appLinkAttributes]=\"link.attributes\"\n      href=\"\"\n      [ngClass]=\"getClasses()\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n      <a *ngSwitchCase=\"'external'\" [ngClass]=\"getClasses()\" href=\"{{link.url}}\" [appLinkAttributes]=\"link.attributes\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n      <a *ngSwitchDefault\n        [ngClass]=\"getClasses()\"\n        [appLinkAttributes]=\"link.attributes\"\n        routerLinkActive=\"active\"\n        [routerLink]=\"[link.url]\"\n        (click)=\"hideMobile()\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n    </ng-container>\n  `\n})\nexport class AppSidebarNavLinkComponent implements OnInit {\n  @Input() link: any;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private router: Router,\n    private el: ElementRef\n  ) { }\n\n  public getClasses() {\n    const disabled = this.isDisabled();\n    const classes = {\n      'nav-link': true,\n      'disabled': disabled,\n      'btn-link': disabled\n    };\n    if (this.hasVariant()) {\n      const variant = `nav-link-${this.link.variant}`;\n      classes[variant] = true;\n    }\n    return classes;\n  }\n\n  public getLinkType() {\n    return this.isDisabled() ? 'disabled' : this.isExternalLink() ? 'external' : '';\n  }\n\n  public hasVariant() {\n    return this.link.variant ? true : false;\n  }\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isDisabled() {\n    return this.link.attributes && this.link.attributes.disabled ? true : false;\n  }\n\n  public isExternalLink() {\n    return this.link.url.substring(0, 4) === 'http' ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  public hideMobile() {\n    if (this.document.body.classList.contains('sidebar-show')) {\n      this.renderer.removeClass(this.document.body, 'sidebar-show');\n    }\n  }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-dropdown',\n  template: `\n    <a class=\"nav-link nav-dropdown-toggle\" appNavDropdownToggle>\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ul class=\"nav-dropdown-items\">\n      <ng-template ngFor let-child [ngForOf]=\"link.children\">\n        <app-sidebar-nav-item [item]='child'></app-sidebar-nav-item>\n      </ng-template>\n    </ul>\n  `,\n  styles: ['.nav-dropdown-toggle { cursor: pointer; }']\n})\nexport class AppSidebarNavDropdownComponent implements OnInit {\n  @Input() link: any;\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-title',\n  template: ''\n})\nexport class AppSidebarNavTitleComponent implements OnInit {\n  @Input() title: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    const li = this.renderer.createElement('li');\n    const name = this.renderer.createText(this.title.name);\n\n    this.renderer.addClass(li, 'nav-title');\n\n    if ( this.title.class ) {\n      const classes = this.title.class;\n      this.renderer.addClass(li, classes);\n    }\n\n    if ( this.title.wrapper ) {\n      const wrapper = this.renderer.createElement(this.title.wrapper.element);\n\n      this.renderer.appendChild(wrapper, name);\n      this.renderer.appendChild(li, wrapper);\n    } else {\n      this.renderer.appendChild(li, name);\n    }\n    this.renderer.appendChild(nativeElement, li);\n    Replace(this.el);\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule} from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\n// App Sidebar Component\r\nimport { AppSidebarFooterComponent } from './app-sidebar-footer.component';\r\nimport { AppSidebarFormComponent } from './app-sidebar-form.component';\r\nimport { AppSidebarHeaderComponent } from './app-sidebar-header.component';\r\nimport { AppSidebarMinimizerComponent } from './app-sidebar-minimizer.component';\r\nimport { AppSidebarComponent } from './app-sidebar.component';\r\nimport {\r\n  AppSidebarNavComponent,\r\n  AppSidebarNavDropdownComponent,\r\n  AppSidebarNavItemComponent,\r\n  AppSidebarNavLinkComponent,\r\n  AppSidebarNavTitleComponent,\r\n  NavDropdownDirective,\r\n  NavDropdownToggleDirective,\r\n  LinkAttributesDirective\r\n} from './app-sidebar-nav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppSidebarFooterComponent,\r\n    AppSidebarFormComponent,\r\n    AppSidebarHeaderComponent,\r\n    AppSidebarMinimizerComponent,\r\n    AppSidebarComponent,\r\n    AppSidebarNavComponent,\r\n    AppSidebarNavDropdownComponent,\r\n    AppSidebarNavItemComponent,\r\n    AppSidebarNavLinkComponent,\r\n    AppSidebarNavTitleComponent,\r\n    NavDropdownDirective,\r\n    NavDropdownToggleDirective,\r\n    LinkAttributesDirective,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppSidebarFooterComponent,\r\n    AppSidebarFormComponent,\r\n    AppSidebarHeaderComponent,\r\n    AppSidebarMinimizerComponent,\r\n    AppSidebarMinimizerComponent,\r\n    AppSidebarComponent,\r\n    AppSidebarNavComponent,\r\n    AppSidebarNavDropdownComponent,\r\n    AppSidebarNavItemComponent,\r\n    AppSidebarNavLinkComponent,\r\n    AppSidebarNavTitleComponent,\r\n    NavDropdownDirective,\r\n    NavDropdownToggleDirective,\r\n    LinkAttributesDirective\r\n  ]\r\n})\r\nexport class AppSidebarModule { }\r\n"]}