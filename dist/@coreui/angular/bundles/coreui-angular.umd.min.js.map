{"version":3,"sources":["ng://@coreui/angular/lib/shared/classes.ts","ng://@coreui/angular/lib/shared/toggle-classes.ts","ng://@coreui/angular/lib/shared/layout/layout.directive.ts","ng://@coreui/angular/lib/shared/layout/layout.module.ts","ng://@coreui/angular/lib/shared/replace.ts","ng://@coreui/angular/lib/aside/app-aside.component.ts","ng://@coreui/angular/lib/aside/app-aside.module.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.service.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.component.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.module.ts","ng://@coreui/angular/lib/footer/app-footer.component.ts","ng://@coreui/angular/lib/footer/app-footer.module.ts","ng://@coreui/angular/lib/header/app-header.component.ts","ng://@coreui/angular/lib/header/app-header.module.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-footer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-form.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-header.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-minimizer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-nav.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.module.ts"],"names":["sidebarCssClasses","asideMenuCssClasses","ToggleClasses","Toggle","ClassNames","Level","indexOf","NewClassNames","slice","map","Class","document","body","classList","contains","remove","add","ClassToggler","renderer","this","prototype","removeClasses","_this","toggleClasses","removeClass","addClass","Injectable","Inject","args","DOCUMENT","Renderer2","SidebarToggleDirective","ngOnInit","bp","breakpoint","toggleOpen","$event","cssClass","preventDefault","Directive","selector","Input","HostListener","SidebarMinimizeDirective","MobileSidebarToggleDirective","hasClass","target","elementClassName","RegExp","test","className","SidebarOffCanvasCloseDirective","toggleClass","elem","newClass","replace","BrandMinimizeDirective","AsideToggleDirective","classToggler","providers","HtmlAttributesDirective","el","attribs","appHtmlAttr","attr","setStyle","setAttrib","styles","style","nativeElement","classes","Array","isArray","split","filter","element","length","forEach","key","value","setAttribute","ElementRef","LayoutModule","NgModule","imports","CommonModule","exports","declarations","Replace","parentElement","firstChild","insertBefore","removeChild","AppAsideComponent","isFixed","fixed","isOffCanvas","offCanvas","displayBreakpoint","display","ngOnDestroy","Component","template","AppAsideModule","AppBreadcrumbService","router","route","_breadcrumbs","BehaviorSubject","breadcrumbs","asObservable","events","pipe","event","NavigationEnd","subscribe","currentRoute","root","url","childrenRoutes","children","outlet","routeSnapshot","snapshot","segment","path","join","push","label","data","next","Object","assign","Router","ActivatedRoute","AppBreadcrumbComponent","service","AppBreadcrumbModule","forRoot","config","ngModule","RouterModule","AppFooterComponent","fixedClass","HostBinding","AppFooterModule","AppHeaderComponent","navbarBrandText","icon","text","navbarBrandHref","navbarBrandImg","Boolean","navbarBrand","navbarBrandFull","navbarBrandMinimized","AppHeaderModule","AppSidebarFooterComponent","AppSidebarFormComponent","AppSidebarHeaderComponent","AppSidebarMinimizerComponent","AppSidebarComponent","isCompact","compact","isMinimized","minimized","fixedPosition","console","warn","NavDropdownDirective","toggle","NavDropdownToggleDirective","dropdown","AppSidebarNavComponent","role","isDivider","item","divider","isTitle","title","ngOnChanges","changes","navItemsArray","JSON","parse","stringify","navItems","AppSidebarNavItemComponent","class","isDropdown","thisUrl","isActive","AppSidebarNavLinkComponent","getClasses","disabled","isDisabled","nav-link","btn-link","hasVariant","link","variant","getLinkType","isExternalLink","isBadge","badge","attributes","substring","isIcon","hideMobile","AppSidebarNavDropdownComponent","AppSidebarNavTitleComponent","li","createElement","name","createText","wrapper","appendChild","AppSidebarModule"],"mappings":"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","sourcesContent":["export const sidebarCssClasses: Array<string> = [\r\n  'sidebar-show',\r\n  'sidebar-sm-show',\r\n  'sidebar-md-show',\r\n  'sidebar-lg-show',\r\n  'sidebar-xl-show'\r\n];\r\n\r\nexport const asideMenuCssClasses: Array<string> = [\r\n  'aside-menu-show',\r\n  'aside-menu-sm-show',\r\n  'aside-menu-md-show',\r\n  'aside-menu-lg-show',\r\n  'aside-menu-xl-show'\r\n];\r\n","import {Inject, Injectable, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nconst RemoveClasses = (NewClassNames) => {\r\n  const MatchClasses = NewClassNames.map((Class) => document.body.classList.contains(Class));\r\n  return MatchClasses.indexOf(true) !== -1;\r\n};\r\n\r\nexport const ToggleClasses = (Toggle, ClassNames) => {\r\n  const Level = ClassNames.indexOf(Toggle);\r\n  const NewClassNames = ClassNames.slice(0, Level + 1);\r\n\r\n  if (RemoveClasses(NewClassNames)) {\r\n    NewClassNames.map((Class) => document.body.classList.remove(Class));\r\n  } else {\r\n    document.body.classList.add(Toggle);\r\n  }\r\n};\r\n\r\n@Injectable()\r\nexport class ClassToggler {\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n  ) {}\r\n\r\n  removeClasses(NewClassNames) {\r\n    const MatchClasses = NewClassNames.map((Class) => this.document.body.classList.contains(Class));\r\n    return MatchClasses.indexOf(true) !== -1;\r\n  }\r\n\r\n  toggleClasses(Toggle, ClassNames) {\r\n    const Level = ClassNames.indexOf(Toggle);\r\n    const NewClassNames = ClassNames.slice(0, Level + 1);\r\n\r\n    if (this.removeClasses(NewClassNames)) {\r\n      NewClassNames.map((Class) => this.renderer.removeClass(this.document.body, Class));\r\n    } else {\r\n      this.renderer.addClass(this.document.body, Toggle);\r\n    }\r\n  }\r\n}\r\n","import {Directive, ElementRef, HostListener, Inject, Input, OnInit, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport { asideMenuCssClasses, sidebarCssClasses } from '../classes';\nimport { ClassToggler, ToggleClasses } from '../toggle-classes';\n\n/**\n* Allows the sidebar to be toggled via click.\n*/\n@Directive({\n  selector: '[appSidebarToggler]'\n})\nexport class SidebarToggleDirective implements OnInit {\n  @Input('appSidebarToggler') breakpoint: string;\n  public bp;\n  constructor() {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    let cssClass;\n    this.bp ? cssClass = `sidebar-${this.bp}-show` : cssClass = sidebarCssClasses[0];\n    ToggleClasses(cssClass, sidebarCssClasses);\n  }\n}\n\n@Directive({\n  selector: '[appSidebarMinimizer]'\n})\nexport class SidebarMinimizeDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('sidebar-minimized') ?\n      this.renderer.removeClass(body, 'sidebar-minimized') :\n      this.renderer.addClass(body, 'sidebar-minimized');\n    // document.body.classList.toggle('sidebar-minimized');\n  }\n}\n\n@Directive({\n  selector: '[appMobileSidebarToggler]'\n})\nexport class MobileSidebarToggleDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('sidebar-show') ?\n      this.renderer.removeClass(body, 'sidebar-show') :\n      this.renderer.addClass(body, 'sidebar-show');\n    // document.body.classList.toggle('sidebar-show');\n  }\n}\n\n/**\n* Allows the off-canvas sidebar to be closed via click.\n*/\n@Directive({\n  selector: '[appSidebarClose]'\n})\nexport class SidebarOffCanvasCloseDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  // Toggle element class\n  private toggleClass(elem: any, elementClassName: string) {\n    let newClass = ' ' + elem.className.replace( /[\\t\\r\\n]/g, ' ' ) + ' ';\n    if (this.hasClass(elem, elementClassName)) {\n      while (newClass.indexOf(' ' + elementClassName + ' ') >= 0 ) {\n        newClass = newClass.replace( ' ' + elementClassName + ' ' , ' ' );\n      }\n      elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n    } else {\n      elem.className += ' ' + elementClassName;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n\n    const body = this.document.body;\n    if (this.hasClass(body, 'sidebar-off-canvas')) {\n      body.classList.contains('sidebar-show') ?\n        this.renderer.removeClass(body, 'sidebar-show') :\n        this.renderer.addClass(body, 'sidebar-show');\n      // this.toggleClass(document.body, 'sidebar-opened');\n    }\n  }\n}\n\n@Directive({\n  selector: '[appBrandMinimizer]'\n})\nexport class BrandMinimizeDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('brand-minimized') ?\n      this.renderer.removeClass(body, 'brand-minimized') :\n      this.renderer.addClass(body, 'brand-minimized');\n    // document.body.classList.toggle('brand-minimized');\n  }\n}\n\n\n/**\n* Allows the aside to be toggled via click.\n*/\n@Directive({\n  selector: '[appAsideMenuToggler]',\n  providers: [ClassToggler]\n})\nexport class AsideToggleDirective implements OnInit {\n  @Input('appAsideMenuToggler') breakpoint: string;\n  public bp;\n  constructor(private classToggler: ClassToggler) {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const cssClass = this.bp ? `aside-menu-${this.bp}-show` : asideMenuCssClasses[0];\n    this.classToggler.toggleClasses(cssClass, asideMenuCssClasses);\n  }\n}\n\n@Directive({\n  selector: '[appHtmlAttr]'\n})\nexport class HtmlAttributesDirective implements OnInit {\n  @Input() appHtmlAttr: {[key: string]: string };\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit() {\n    const attribs = this.appHtmlAttr;\n    for (const attr in attribs) {\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\n        this.setStyle(attribs[attr]);\n      } else if (attr === 'class') {\n        this.addClass(attribs[attr]);\n      } else {\n        this.setAttrib(attr, attribs[attr]);\n      }\n    }\n  }\n\n  private setStyle(styles) {\n    for (const style in styles) {\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\n    }\n  }\n\n  private addClass(classes) {\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\n    classArray.filter((element) => element.length > 0).forEach(element => {\n      this.renderer.addClass(this.el.nativeElement, element );\n    });\n  }\n\n  private setAttrib(key, value) {\n    this.renderer.setAttribute(this.el.nativeElement, key, value );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport {\n  AsideToggleDirective,\n  BrandMinimizeDirective,\n  MobileSidebarToggleDirective,\n  SidebarToggleDirective,\n  SidebarMinimizeDirective,\n  SidebarOffCanvasCloseDirective,\n  HtmlAttributesDirective\n} from './layout.directive';\nimport { ClassToggler } from '../toggle-classes';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AsideToggleDirective,\n    BrandMinimizeDirective,\n    MobileSidebarToggleDirective,\n    SidebarToggleDirective,\n    SidebarMinimizeDirective,\n    SidebarOffCanvasCloseDirective,\n    HtmlAttributesDirective\n  ],\n  declarations: [\n    AsideToggleDirective,\n    BrandMinimizeDirective,\n    MobileSidebarToggleDirective,\n    SidebarToggleDirective,\n    SidebarMinimizeDirective,\n    SidebarOffCanvasCloseDirective,\n    HtmlAttributesDirective\n  ],\n  providers: [\n    ClassToggler\n  ]\n})\nexport class LayoutModule { }\n","export function Replace(el: any): any {\r\n  const nativeElement: HTMLElement = el.nativeElement;\r\n  const parentElement: HTMLElement = nativeElement.parentElement;\r\n  // move all children out of the element\r\n  while (nativeElement.firstChild) {\r\n    parentElement.insertBefore(nativeElement.firstChild, nativeElement);\r\n  }\r\n  // remove the empty element(the host)\r\n  parentElement.removeChild(nativeElement);\r\n}\r\n","import {Component, ElementRef, Input, OnInit, OnDestroy, Inject, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport { asideMenuCssClasses, Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-aside',\r\n  template: `\r\n    <aside class=\"aside-menu\">\r\n      <ng-content></ng-content>\r\n    </aside>\r\n  `\r\n})\r\nexport class AppAsideComponent implements OnInit, OnDestroy {\r\n  @Input() display: any;\r\n  @Input() fixed: boolean;\r\n  @Input() offCanvas: boolean;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.isOffCanvas(this.offCanvas);\r\n    this.displayBreakpoint(this.display);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, 'aside-menu-fixed');\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'aside-menu-fixed');\r\n    }\r\n  }\r\n\r\n  isOffCanvas(offCanvas: boolean = this.offCanvas): void {\r\n    if (offCanvas) {\r\n      this.renderer.addClass(this.document.body, 'aside-menu-off-canvas');\r\n    }\r\n  }\r\n\r\n  displayBreakpoint(display: any = this.display): void {\r\n    if (display !== false ) {\r\n      const cssClass = this.display ? `aside-menu-${this.display}-show` : asideMenuCssClasses[0];\r\n      this.renderer.addClass(this.document.body, cssClass);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\nimport { AppAsideComponent } from './app-aside.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppAsideComponent,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppAsideComponent\r\n  ]\r\n})\r\nexport class AppAsideModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs/index';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppBreadcrumbService {\r\n\r\n  breadcrumbs: Observable<Array<Object>>;\r\n\r\n  private _breadcrumbs: BehaviorSubject<Array<Object>>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) {\r\n\r\n    this._breadcrumbs = new BehaviorSubject<Object[]>(new Array<Object>());\r\n\r\n    this.breadcrumbs = this._breadcrumbs.asObservable();\r\n\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event) => {\r\n      const breadcrumbs = [];\r\n      let currentRoute = this.route.root,\r\n      url = '';\r\n      do {\r\n        const childrenRoutes = currentRoute.children;\r\n        currentRoute = null;\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        childrenRoutes.forEach(route => {\r\n          if (route.outlet === 'primary') {\r\n            const routeSnapshot = route.snapshot;\r\n            url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\r\n            breadcrumbs.push({\r\n              label: route.snapshot.data,\r\n              url:   url\r\n            });\r\n            currentRoute = route;\r\n          }\r\n        });\r\n      } while (currentRoute);\r\n\r\n      this._breadcrumbs.next(Object.assign([], breadcrumbs));\r\n\r\n      return breadcrumbs;\r\n    });\r\n  }\r\n}\r\n","import {Component, ElementRef, Inject, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {AppBreadcrumbService} from './app-breadcrumb.service';\r\nimport {Replace} from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  template: `\r\n    <ng-template ngFor let-breadcrumb [ngForOf]=\"breadcrumbs | async\" let-last = last>\r\n      <li class=\"breadcrumb-item\"\r\n          *ngIf=\"breadcrumb.label.title && (breadcrumb.url.slice(-1) == '/' || last)\"\r\n          [ngClass]=\"{active: last}\">\r\n        <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</a>\r\n        <span *ngIf=\"last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</span>\r\n      </li>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class AppBreadcrumbComponent implements OnInit, OnDestroy {\r\n  @Input() fixed: boolean;\r\n  public breadcrumbs;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n    public service: AppBreadcrumbService,\r\n    public el: ElementRef\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.breadcrumbs = this.service.breadcrumbs;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, 'breadcrumb-fixed');\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'breadcrumb-fixed');\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule, ModuleWithProviders} from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// App Breadcrumb Component\r\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\r\nimport { AppBreadcrumbComponent } from './app-breadcrumb.component';\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [ CommonModule, RouterModule ],\r\n  exports: [ AppBreadcrumbComponent ],\r\n  declarations: [ AppBreadcrumbComponent ]\r\n})\r\nexport class AppBreadcrumbModule {\r\n  static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: AppBreadcrumbModule,\r\n      providers: [\r\n        AppBreadcrumbService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {Component, HostBinding, Inject, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n  selector: 'app-footer, cui-footer',\n  template: `<ng-content></ng-content>`\n})\nexport class AppFooterComponent implements OnInit, OnDestroy {\n  @Input() fixed: boolean;\n\n  @HostBinding('class.app-footer') true;\n\n  private readonly fixedClass = 'footer-fixed';\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) {}\n\n  ngOnInit(): void {\n    this.isFixed(this.fixed);\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, this.fixedClass);\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, this.fixedClass);\n    }\n  }\n}\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppFooterComponent } from './app-footer.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  exports: [ AppFooterComponent ],\r\n  declarations: [ AppFooterComponent ]\r\n})\r\nexport class AppFooterModule {}\r\n","import {Component, ElementRef, Input, OnInit, OnDestroy, Inject, Renderer2} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Replace } from '../shared';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <header class=\"app-header navbar\">\n      <ng-template [ngIf]=\"mobileSidebarToggler != false\">\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appSidebarToggler>\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n        <a class=\"navbar-brand\" [href]=\"navbarBrandHref\">\n          <ng-template [ngIf]=\"navbarBrandImg\">\n          <img *ngIf=\"navbarBrand\"\n               [appHtmlAttr]=\"navbarBrand\"\n               [ngClass]=\"'navbar-brand'\">\n          <img *ngIf=\"navbarBrandFull\"\n               [appHtmlAttr]=\"navbarBrandFull\"\n               [ngClass]=\"'navbar-brand-full'\">\n          <img *ngIf=\"navbarBrandMinimized\"\n               [appHtmlAttr]=\"navbarBrandMinimized\"\n               [ngClass]=\"'navbar-brand-minimized'\">\n          </ng-template>\n          <ng-template [ngIf]=\"!navbarBrandImg\">\n            <div class=\"navbar-brand-full\" [innerHTML]=\"navbarBrandText.text\"></div>\n            <div class=\"navbar-brand-minimized\" [innerHTML]=\"navbarBrandText.icon\"></div>\n          </ng-template>\n        </a>\n      <ng-template [ngIf]=\"sidebarToggler != false\">\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appSidebarToggler]=\"sidebarToggler\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-content></ng-content>\n      <ng-template [ngIf]=\"asideMenuToggler != false\">\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appAsideMenuToggler]=\"asideMenuToggler\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n      <ng-template [ngIf]=\"mobileAsideMenuToggler != false\">\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appAsideMenuToggler>\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </ng-template>\n    </header>\n  `\n})\nexport class AppHeaderComponent implements OnInit, OnDestroy {\n\n  @Input() fixed: boolean;\n\n  @Input() navbarBrand: any;\n  @Input() navbarBrandFull: any;\n  @Input() navbarBrandMinimized: any;\n  @Input() navbarBrandText: any = {icon: 'ð²', text: 'ð² CoreUI'};\n  @Input() navbarBrandHref: any = '';\n\n  @Input() sidebarToggler: any;\n  @Input() mobileSidebarToggler: any;\n\n  @Input() asideMenuToggler: any;\n  @Input() mobileAsideMenuToggler: any;\n\n  private readonly fixedClass = 'header-fixed';\n  navbarBrandImg: boolean;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    Replace(this.el);\n    this.isFixed(this.fixed);\n    this.navbarBrandImg = Boolean(this.navbarBrand || this.navbarBrandFull || this.navbarBrandMinimized);\n  }\n\n  ngOnDestroy(): void {\n    this.renderer.removeClass(this.document.body, this.fixedClass);\n  }\n\n  isFixed(fixed: boolean = this.fixed): void {\n    if (fixed) {\n      this.renderer.addClass(this.document.body, this.fixedClass);\n    }\n  }\n}\n","import { CommonModule} from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from '../shared/layout';\n\nimport { AppHeaderComponent } from './app-header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutModule\n  ],\n  exports: [\n    AppHeaderComponent,\n    LayoutModule\n  ],\n  declarations: [\n    AppHeaderComponent\n  ]\n})\nexport class AppHeaderModule {}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-footer',\r\n  template: `\r\n    <div class=\"sidebar-footer\">\r\n      <ng-content></ng-content>\r\n    </div>`\r\n})\r\nexport class AppSidebarFooterComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-form',\r\n  template: `\r\n    <form class=\"sidebar-form\">\r\n      <ng-content></ng-content>\r\n    </form>\r\n  `\r\n})\r\nexport class AppSidebarFormComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-header',\r\n  template: `\r\n    <div class=\"sidebar-header\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class AppSidebarHeaderComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-minimizer',\r\n  template: `\r\n    <button class=\"sidebar-minimizer\" type=\"button\" appSidebarMinimizer appBrandMinimizer></button>\r\n  `\r\n})\r\nexport class AppSidebarMinimizerComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, Input, Inject, HostBinding, OnInit, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { sidebarCssClasses } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `<ng-content></ng-content>`\r\n})\r\nexport class AppSidebarComponent implements OnInit, OnDestroy {\r\n  @Input() compact: boolean;\r\n  @Input() display: any;\r\n  @Input() fixed: boolean;\r\n  @Input() minimized: boolean;\r\n  @Input() offCanvas: boolean;\r\n\r\n  @HostBinding('class.sidebar') true;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.displayBreakpoint(this.display);\r\n    this.isCompact(this.compact);\r\n    this.isFixed(this.fixed);\r\n    this.isMinimized(this.minimized);\r\n    this.isOffCanvas(this.offCanvas);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, 'sidebar-fixed' );\r\n  }\r\n\r\n  isCompact(compact: boolean = this.compact): void {\r\n    if (compact) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-compact' );\r\n    }\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-fixed');\r\n    }\r\n  }\r\n\r\n  isMinimized(minimized: boolean = this.minimized): void {\r\n    if (minimized) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-minimized');\r\n    }\r\n  }\r\n\r\n  isOffCanvas(offCanvas: boolean = this.offCanvas): void {\r\n    if (offCanvas) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-off-canvas');\r\n    }\r\n  }\r\n\r\n  fixedPosition(fixed: boolean = this.fixed): void {\r\n    console.warn('deprecated fixedPosition(), use isFixed() instead');\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-fixed');\r\n    }\r\n  }\r\n\r\n  displayBreakpoint(display: any = this.display): void {\r\n    if (display !== false) {\r\n      const cssClass = display ? `sidebar-${display}-show` : sidebarCssClasses[0];\r\n      this.renderer.addClass(this.document.body, cssClass);\r\n    }\r\n  }\r\n}\r\n","import {\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener, Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport {DOCUMENT} from '@angular/common';\nimport { Router } from '@angular/router';\n\nimport { Replace } from '../shared';\n\n@Directive({\n  selector: '[appNavDropdown]'\n})\nexport class NavDropdownDirective {\n\n  constructor(private el: ElementRef) { }\n\n  toggle() {\n    this.el.nativeElement.classList.toggle('open');\n  }\n}\n\n/**\n* Allows the dropdown to be toggled via click.\n*/\n@Directive({\n  selector: '[appNavDropdownToggle]'\n})\nexport class NavDropdownToggleDirective {\n  constructor(private dropdown: NavDropdownDirective) {}\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    this.dropdown.toggle();\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav',\n  template: `\n    <ul class=\"nav\">\n      <ng-template ngFor let-navitem [ngForOf]=\"navItems\">\n        <li *ngIf=\"isDivider(navitem)\" class=\"nav-divider\"></li>\n        <ng-template [ngIf]=\"isTitle(navitem)\">\n          <app-sidebar-nav-title [title]='navitem'></app-sidebar-nav-title>\n        </ng-template>\n        <ng-template [ngIf]=\"!isDivider(navitem)&&!isTitle(navitem)\">\n          <app-sidebar-nav-item [item]='navitem'></app-sidebar-nav-item>\n        </ng-template>\n      </ng-template>\n    </ul>\n  `\n})\nexport class AppSidebarNavComponent implements OnChanges {\n  @Input() navItems: Array<any>;\n\n  @HostBinding('class.sidebar-nav') true;\n  @HostBinding('attr.role') role = 'nav';\n\n  public navItemsArray: Array<any>;\n\n  public isDivider(item) {\n    return item.divider ? true : false;\n  }\n\n  public isTitle(item) {\n    return item.title ? true : false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.navItemsArray = JSON.parse(JSON.stringify(this.navItems));\n  }\n\n  constructor() { }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-item',\n  template: `\n    <li *ngIf=\"!isDropdown(); else dropdown\" [ngClass]=\"hasClass() ? 'nav-item ' + item.class : 'nav-item'\">\n      <app-sidebar-nav-link [link]='item'></app-sidebar-nav-link>\n    </li>\n    <ng-template #dropdown>\n      <li [ngClass]=\"hasClass() ? 'nav-item nav-dropdown ' + item.class : 'nav-item nav-dropdown'\"\n          [class.open]=\"isActive()\"\n          routerLinkActive=\"open\"\n          appNavDropdown>\n        <app-sidebar-nav-dropdown [link]='item'></app-sidebar-nav-dropdown>\n      </li>\n    </ng-template>\n    `\n})\nexport class AppSidebarNavItemComponent implements OnInit {\n  @Input() item: any;\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  public hasClass() {\n    return this.item.class ? true : false;\n  }\n\n  public isDropdown() {\n    return this.item.children ? true : false;\n  }\n\n  public thisUrl() {\n    return this.item.url;\n  }\n\n  public isActive() {\n    return this.router.isActive(this.thisUrl(), false);\n  }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-link',\n  template: `\n    <ng-container [ngSwitch]=\"getLinkType()\">\n      <a *ngSwitchCase=\"'disabled'\"\n      [attr.disabled]=\"true\"\n      [appHtmlAttr]=\"link.attributes\"\n      href=\"\"\n      [ngClass]=\"getClasses()\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n      <a *ngSwitchCase=\"'external'\" [ngClass]=\"getClasses()\" href=\"{{link.url}}\" [appHtmlAttr]=\"link.attributes\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n      <a *ngSwitchDefault\n        [ngClass]=\"getClasses()\"\n        [appHtmlAttr]=\"link.attributes\"\n        routerLinkActive=\"active\"\n        [routerLink]=\"[link.url]\"\n        (click)=\"hideMobile()\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n    </ng-container>\n  `\n})\nexport class AppSidebarNavLinkComponent implements OnInit {\n  @Input() link: any;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private router: Router,\n    private el: ElementRef\n  ) { }\n\n  public getClasses() {\n    const disabled = this.isDisabled();\n    const classes = {\n      'nav-link': true,\n      'disabled': disabled,\n      'btn-link': disabled\n    };\n    if (this.hasVariant()) {\n      const variant = `nav-link-${this.link.variant}`;\n      classes[variant] = true;\n    }\n    return classes;\n  }\n\n  public getLinkType() {\n    return this.isDisabled() ? 'disabled' : this.isExternalLink() ? 'external' : '';\n  }\n\n  public hasVariant() {\n    return this.link.variant ? true : false;\n  }\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isDisabled() {\n    return this.link.attributes && this.link.attributes.disabled ? true : false;\n  }\n\n  public isExternalLink() {\n    return this.link.url.substring(0, 4) === 'http' ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  public hideMobile() {\n    if (this.document.body.classList.contains('sidebar-show')) {\n      this.renderer.removeClass(this.document.body, 'sidebar-show');\n    }\n  }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-dropdown',\n  template: `\n    <a class=\"nav-link nav-dropdown-toggle\" appNavDropdownToggle>\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ul class=\"nav-dropdown-items\">\n      <ng-template ngFor let-child [ngForOf]=\"link.children\">\n        <app-sidebar-nav-item [item]='child'></app-sidebar-nav-item>\n      </ng-template>\n    </ul>\n  `,\n  styles: ['.nav-dropdown-toggle { cursor: pointer; }']\n})\nexport class AppSidebarNavDropdownComponent implements OnInit {\n  @Input() link: any;\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-title',\n  template: ''\n})\nexport class AppSidebarNavTitleComponent implements OnInit {\n  @Input() title: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    const li = this.renderer.createElement('li');\n    const name = this.renderer.createText(this.title.name);\n\n    this.renderer.addClass(li, 'nav-title');\n\n    if ( this.title.class ) {\n      const classes = this.title.class;\n      this.renderer.addClass(li, classes);\n    }\n\n    if ( this.title.wrapper ) {\n      const wrapper = this.renderer.createElement(this.title.wrapper.element);\n\n      this.renderer.appendChild(wrapper, name);\n      this.renderer.appendChild(li, wrapper);\n    } else {\n      this.renderer.appendChild(li, name);\n    }\n    this.renderer.appendChild(nativeElement, li);\n    Replace(this.el);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LayoutModule } from '../shared/layout';\n\n// App Sidebar Component\nimport { AppSidebarFooterComponent } from './app-sidebar-footer.component';\nimport { AppSidebarFormComponent } from './app-sidebar-form.component';\nimport { AppSidebarHeaderComponent } from './app-sidebar-header.component';\nimport { AppSidebarMinimizerComponent } from './app-sidebar-minimizer.component';\nimport { AppSidebarComponent } from './app-sidebar.component';\nimport {\n  AppSidebarNavComponent,\n  AppSidebarNavDropdownComponent,\n  AppSidebarNavItemComponent,\n  AppSidebarNavLinkComponent,\n  AppSidebarNavTitleComponent,\n  NavDropdownDirective,\n  NavDropdownToggleDirective\n} from './app-sidebar-nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    LayoutModule\n  ],\n  exports: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective,\n    LayoutModule\n  ],\n  declarations: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective\n  ]\n})\nexport class AppSidebarModule { }\n"]}