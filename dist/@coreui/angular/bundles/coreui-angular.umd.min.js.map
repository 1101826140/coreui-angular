{"version":3,"sources":["ng://@coreui/angular/lib/shared/classes.ts","ng://@coreui/angular/lib/shared/toggle-classes.ts","ng://@coreui/angular/lib/shared/layout/layout.directive.ts","ng://@coreui/angular/lib/shared/layout/layout.module.ts","ng://@coreui/angular/lib/shared/replace.ts","ng://@coreui/angular/lib/aside/app-aside.component.ts","ng://@coreui/angular/lib/aside/app-aside.module.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.service.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.component.ts","ng://@coreui/angular/lib/breadcrumb/app-breadcrumb.module.ts","ng://@coreui/angular/lib/footer/app-footer.component.ts","ng://@coreui/angular/lib/footer/app-footer.module.ts","ng://@coreui/angular/lib/header/app-header.component.ts","ng://@coreui/angular/lib/header/app-header.module.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-footer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-form.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-header.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-minimizer.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar-nav.component.ts","ng://@coreui/angular/lib/sidebar/app-sidebar.module.ts"],"names":["sidebarCssClasses","asideMenuCssClasses","ClassToggler","document","renderer","this","prototype","removeClasses","NewClassNames","_this","map","Class","body","classList","contains","indexOf","toggleClasses","Toggle","ClassNames","Level","slice","removeClass","addClass","Injectable","Inject","args","DOCUMENT","Renderer2","SidebarToggleDirective","classToggler","ngOnInit","bp","breakpoint","toggleOpen","$event","preventDefault","cssClass","Directive","selector","providers","Input","HostListener","SidebarMinimizeDirective","MobileSidebarToggleDirective","hasClass","target","elementClassName","RegExp","test","className","SidebarOffCanvasCloseDirective","toggleClass","elem","newClass","replace","BrandMinimizeDirective","AsideToggleDirective","HtmlAttributesDirective","el","attribs","appHtmlAttr","attr","setStyle","setAttrib","styles","style","nativeElement","classes","Array","isArray","split","filter","element","length","forEach","key","value","setAttribute","ElementRef","LayoutModule","NgModule","imports","CommonModule","exports","declarations","Replace","parentElement","firstChild","insertBefore","removeChild","AppAsideComponent","isFixed","fixed","isOffCanvas","offCanvas","displayBreakpoint","display","ngOnDestroy","Component","template","AppAsideModule","AppBreadcrumbService","router","route","_breadcrumbs","BehaviorSubject","breadcrumbs","asObservable","events","pipe","event","NavigationEnd","subscribe","currentRoute","root","url","childrenRoutes","children","outlet","routeSnapshot","snapshot","segment","path","join","push","label","data","next","Object","assign","Router","ActivatedRoute","AppBreadcrumbComponent","service","AppBreadcrumbModule","forRoot","config","ngModule","RouterModule","AppFooterComponent","fixedClass","HostBinding","AppFooterModule","AppHeaderComponent","navbarBrandText","icon","text","navbarBrandHref","navbarBrandImg","Boolean","navbarBrand","navbarBrandFull","navbarBrandMinimized","AppHeaderModule","AppSidebarFooterComponent","AppSidebarFormComponent","AppSidebarHeaderComponent","AppSidebarMinimizerComponent","AppSidebarComponent","isCompact","compact","isMinimized","minimized","fixedPosition","console","warn","NavDropdownDirective","toggle","NavDropdownToggleDirective","dropdown","AppSidebarNavComponent","role","isDivider","item","divider","isTitle","title","ngOnChanges","changes","navItemsArray","JSON","parse","stringify","navItems","AppSidebarNavItemComponent","class","isDropdown","thisUrl","isActive","AppSidebarNavLinkComponent","getClasses","disabled","isDisabled","nav-link","btn-link","hasVariant","link","variant","getLinkType","isExternalLink","isBadge","badge","attributes","substring","isIcon","hideMobile","AppSidebarNavDropdownComponent","AppSidebarNavTitleComponent","li","createElement","name","createText","wrapper","appendChild","AppSidebarModule"],"mappings":"sgBAAA,IAAaA,EAAmC,CAC9C,eACA,kBACA,kBACA,kBACA,mBAGWC,EAAqC,CAChD,kBACA,qBACA,qBACA,qBACA,sBCbFC,EAAA,WAsBE,SAAAA,EAC4BC,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAkBZ,OAfEF,EAAAI,UAAAC,cAAA,SAAcC,GAAd,IAAAC,EAAAJ,KAEE,OAAuC,IADlBG,EAAcE,IAAG,SAAEC,GAAU,OAAAF,EAAKN,SAASS,KAAKC,UAAUC,SAASH,KACpEI,SAAQ,IAG9Bb,EAAAI,UAAAU,cAAA,SAAcC,EAAQC,GAAtB,IAAAT,EAAAJ,KACQc,EAAQD,EAAWH,QAAQE,GAC3BT,EAAgBU,EAAWE,MAAM,EAAGD,EAAQ,GAE9Cd,KAAKE,cAAcC,GACrBA,EAAcE,IAAG,SAAEC,GAAU,OAAAF,EAAKL,SAASiB,YAAYZ,EAAKN,SAASS,KAAMD,KAE3EN,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAMK,wBApBhDM,EAAAA,kFAIIC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAvBgBC,EAAAA,aA0C5BzB,EA1CA,GCSA0B,EAAA,WAOE,SAAAA,EAAoBC,GAAAxB,KAAAwB,aAAAA,EAUtB,OATED,EAAAtB,UAAAwB,SAAA,WACEzB,KAAK0B,GAAK1B,KAAK2B,YAGjBJ,EAAAtB,UAAA2B,WADA,SACWC,GACTA,EAAOC,qBACDC,EAAW/B,KAAK0B,GAAK,WAAW1B,KAAK0B,GAAE,QAAU/B,EAAkB,GACzEK,KAAKwB,aAAab,cAAcoB,EAAUpC,wBAf7CqC,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,sBACVC,UAAW,CAACrC,gDAPLA,yCAUNsC,EAAAA,MAAKf,KAAA,CAAC,yCAMNgB,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAM1BG,EAjBA,gBAuBE,SAAAc,EAC4BvC,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAYZ,OAREsC,EAAApC,UAAA2B,WADA,SACWC,GACTA,EAAOC,qBACDvB,EAAOP,KAAKF,SAASS,KAC3BA,EAAKC,UAAUC,SAAS,qBACtBT,KAAKD,SAASiB,YAAYT,EAAM,qBAChCP,KAAKD,SAASkB,SAASV,EAAM,0CAflCyB,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,iGAIPd,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAjCwDC,EAAAA,iDAqCjEc,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAS1BiB,kBAME,SAAAC,EAC4BxC,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAiBZ,OAbUuC,EAAArC,UAAAsC,SAAR,SAAiBC,EAAaC,GAC5B,OAAO,IAAIC,OAAO,UAAYD,EAAmB,WAAWE,KAAKH,EAAOI,YAI1EN,EAAArC,UAAA2B,WADA,SACWC,GACTA,EAAOC,qBACDvB,EAAOP,KAAKF,SAASS,KAC3BA,EAAKC,UAAUC,SAAS,gBACtBT,KAAKD,SAASiB,YAAYT,EAAM,gBAChCP,KAAKD,SAASkB,SAASV,EAAM,qCApBlCyB,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,qGAIPd,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBArDwDC,EAAAA,iDA8DjEc,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAS1BkB,KAKAO,EAAA,WAIE,SAAAA,EAC4B/C,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAiCZ,OA7BU8C,EAAA5C,UAAAsC,SAAR,SAAiBC,EAAaC,GAC5B,OAAO,IAAIC,OAAO,UAAYD,EAAmB,WAAWE,KAAKH,EAAOI,YAIlEC,EAAA5C,UAAA6C,YAAR,SAAoBC,EAAWN,OACzBO,EAAW,IAAMD,EAAKH,UAAUK,QAAS,YAAa,KAAQ,IAClE,GAAIjD,KAAKuC,SAASQ,EAAMN,GAAmB,CACzC,KAAyD,GAAlDO,EAAStC,QAAQ,IAAM+B,EAAmB,MAC/CO,EAAWA,EAASC,QAAS,IAAMR,EAAmB,IAAM,KAE9DM,EAAKH,UAAYI,EAASC,QAAQ,aAAc,SAEhDF,EAAKH,WAAa,IAAMH,GAK5BI,EAAA5C,UAAA2B,WADA,SACWC,GACTA,EAAOC,qBAEDvB,EAAOP,KAAKF,SAASS,KACvBP,KAAKuC,SAAShC,EAAM,wBACtBA,EAAKC,UAAUC,SAAS,gBACtBT,KAAKD,SAASiB,YAAYT,EAAM,gBAChCP,KAAKD,SAASkB,SAASV,EAAM,sCAnCpCyB,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,6FAIPd,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAjFwDC,EAAAA,iDAuGjEc,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAY1ByB,EAvCA,gBA6CE,SAAAK,EAC4BpD,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAYZ,OAREmD,EAAAjD,UAAA2B,WADA,SACWC,GACTA,EAAOC,qBACDvB,EAAOP,KAAKF,SAASS,KAC3BA,EAAKC,UAAUC,SAAS,mBACtBT,KAAKD,SAASiB,YAAYT,EAAM,mBAChCP,KAAKD,SAASkB,SAASV,EAAM,wCAflCyB,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,+FAIPd,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBA1HwDC,EAAAA,iDA8HjEc,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAS1B8B,KAMAC,EAAA,WAOE,SAAAA,EAAoB3B,GAAAxB,KAAAwB,aAAAA,EAUtB,OATE2B,EAAAlD,UAAAwB,SAAA,WACEzB,KAAK0B,GAAK1B,KAAK2B,YAGjBwB,EAAAlD,UAAA2B,WADA,SACWC,GACTA,EAAOC,qBACDC,EAAW/B,KAAK0B,GAAK,cAAc1B,KAAK0B,GAAE,QAAU9B,EAAoB,GAC9EI,KAAKwB,aAAab,cAAcoB,EAAUnC,wBAf7CoC,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,wBACVC,UAAW,CAACrC,gDA3ILA,yCA8INsC,EAAAA,MAAKf,KAAA,CAAC,2CAMNgB,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAM1B+B,EAjBA,gBAyBE,SAAAC,EAC4BtD,EAClBC,EACAsD,GAFkBrD,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EACAC,KAAAqD,GAAAA,EAgCZ,OA7BED,EAAAnD,UAAAwB,SAAA,eACQ6B,EAAUtD,KAAKuD,YACrB,IAAK,IAAMC,KAAQF,EACJ,UAATE,GAA8C,iBAAnBF,EAAQE,GACrCxD,KAAKyD,SAASH,EAAQE,IACJ,UAATA,EACTxD,KAAKiB,SAASqC,EAAQE,IAEtBxD,KAAK0D,UAAUF,EAAMF,EAAQE,KAK3BJ,EAAAnD,UAAAwD,SAAR,SAAiBE,GACf,IAAK,IAAMC,KAASD,EAClB3D,KAAKD,SAAS0D,SAASzD,KAAKqD,GAAGQ,cAAeD,EAAOD,EAAOC,KAIxDR,EAAAnD,UAAAgB,SAAR,SAAiB6C,GAAjB,IAAA1D,EAAAJ,MACsB+D,MAAMC,QAAQF,GAAWA,EAAUA,EAAQG,MAAM,MAC1DC,OAAM,SAAEC,GAAY,OAAiB,EAAjBA,EAAQC,SAAYC,QAAO,SAACF,GACzD/D,EAAKL,SAASkB,SAASb,EAAKiD,GAAGQ,cAAeM,MAI1Cf,EAAAnD,UAAAyD,UAAR,SAAkBY,EAAKC,GACrBvE,KAAKD,SAASyE,aAAaxE,KAAKqD,GAAGQ,cAAeS,EAAKC,wBAvC1DvC,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,yFAMPd,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAvKwDC,EAAAA,iBAAjDmD,EAAAA,mDAoKhBtC,EAAAA,SAqCHiB,KCzMAsB,EAAA,WAaA,SAAAA,KA0B4B,2BA1B3BC,EAAAA,SAAQvD,KAAA,CAAC,CACRwD,QAAS,CACPC,EAAAA,cAEFC,QAAS,CACP3B,EACAD,EACAZ,EACAf,EACAc,EACAQ,EACAO,GAEF2B,aAAc,CACZ5B,EACAD,EACAZ,EACAf,EACAc,EACAQ,EACAO,GAEFlB,UAAW,CACTrC,OAGwB6E,EAvC5B,GCAA,SAAgBM,EAAQ3B,GAItB,QAHMQ,EAA6BR,EAAGQ,cAChCoB,EAA6BpB,EAAcoB,cAE1CpB,EAAcqB,YACnBD,EAAcE,aAAatB,EAAcqB,WAAYrB,GAGvDoB,EAAcG,YAAYvB,GCR5B,IAAAwB,EAAA,WAkBE,SAAAA,EAC4BvF,EAClBC,EACAsD,GAFkBrD,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EACAC,KAAAqD,GAAAA,EAgCZ,OA7BEgC,EAAApF,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,IACbrD,KAAKsF,QAAQtF,KAAKuF,OAClBvF,KAAKwF,YAAYxF,KAAKyF,WACtBzF,KAAK0F,kBAAkB1F,KAAK2F,UAG9BN,EAAApF,UAAA2F,YAAA,WACE5F,KAAKD,SAASiB,YAAYhB,KAAKF,SAASS,KAAM,qBAGhD8E,EAAApF,UAAAqF,QAAA,SAAQC,QAAA,IAAAA,IAAAA,EAAiBvF,KAAKuF,OACxBA,GACFvF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,qBAI/C8E,EAAApF,UAAAuF,YAAA,SAAYC,QAAA,IAAAA,IAAAA,EAAqBzF,KAAKyF,WAChCA,GACFzF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,0BAI/C8E,EAAApF,UAAAyF,kBAAA,SAAkBC,GAChB,QADgB,IAAAA,IAAAA,EAAe3F,KAAK2F,UACpB,IAAZA,EAAoB,KAChB5D,EAAW/B,KAAK2F,QAAU,cAAc3F,KAAK2F,QAAO,QAAU/F,EAAoB,GACxFI,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAMwB,yBA7ChD8D,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,YACV6D,SAAU,+JAYP3E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAnBqDC,EAAAA,iBAA9CmD,EAAAA,+CAchBtC,EAAAA,qBACAA,EAAAA,yBACAA,EAAAA,SAqCHkD,EArDA,GCAAU,EAAA,WAMA,SAAAA,KAa6B,2BAb5BpB,EAAAA,SAAQvD,KAAA,CAAC,CACRwD,QAAS,CACPC,EAAAA,aACAH,GAEFI,QAAS,CACPO,EACAX,GAEFK,aAAc,CACZM,OAGyBU,EAnB7B,GCAAC,EAAA,WAYE,SAAAA,EAAoBC,EAAwBC,GAA5C,IAAA9F,EAAAJ,KAAoBA,KAAAiG,OAAAA,EAAwBjG,KAAAkG,MAAAA,EAE1ClG,KAAKmG,aAAe,IAAIC,EAAAA,gBAA0B,IAAIrC,OAEtD/D,KAAKqG,YAAcrG,KAAKmG,aAAaG,eAErCtG,KAAKiG,OAAOM,OAAOC,KAAKtC,EAAAA,OAAM,SAACuC,GAAS,OAAAA,aAAiBC,EAAAA,iBAAgBC,UAAS,SAAEF,OAC5EJ,EAAc,GAChBO,EAAexG,EAAK8F,MAAMW,KAC9BC,EAAM,GACN,EAAG,KACKC,EAAiBH,EAAaI,SACpCJ,EAAe,KAEfG,EAAe1C,QAAO,SAAC6B,GACrB,GAAqB,YAAjBA,EAAMe,OAAsB,KACxBC,EAAgBhB,EAAMiB,SAC5BL,GAAO,IAAMI,EAAcJ,IAAIzG,IAAG,SAAC+G,GAAW,OAAAA,EAAQC,OAAMC,KAAK,KACjEjB,EAAYkB,KAAK,CACfC,MAAOtB,EAAMiB,SAASM,KACtBX,IAAOA,IAETF,EAAeV,WAGZU,GAIT,OAFAxG,EAAK+F,aAAauB,KAAKC,OAAOC,OAAO,GAAIvB,IAElCA,IAGb,2BAvCCnF,EAAAA,sDAJQ2G,EAAAA,cAAQC,EAAAA,kBA2CjB9B,EA5CA,GCAA+B,EAAA,WAuBE,SAAAA,EAC4BjI,EAClBC,EACDiI,EACA3E,GAHmBrD,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EACDC,KAAAgI,QAAAA,EACAhI,KAAAqD,GAAAA,EAkBX,OAfS0E,EAAA9H,UAAAwB,SAAP,WACEuD,EAAQhF,KAAKqD,IACbrD,KAAKsF,QAAQtF,KAAKuF,OAClBvF,KAAKqG,YAAcrG,KAAKgI,QAAQ3B,aAGlC0B,EAAA9H,UAAA2F,YAAA,WACE5F,KAAKD,SAASiB,YAAYhB,KAAKF,SAASS,KAAM,qBAGhDwH,EAAA9H,UAAAqF,QAAA,SAAQC,QAAA,IAAAA,IAAAA,EAAiBvF,KAAKuF,OACxBA,GACFvF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,yCApChDsF,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,iBACV6D,SAAU,+hBAgBP3E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAxBqDC,EAAAA,iBAGzD0E,SAHWvB,EAAAA,6CAoBhBtC,EAAAA,SAyBH4F,EA7CA,GCSAE,EAAA,WAAA,SAAAA,KAcA,OARSA,EAAAC,QAAP,SAAeC,GACb,MAAO,CACLC,SAAUH,EACV/F,UAAW,CACT8D,yBAVPrB,EAAAA,SAAQvD,KAAA,CAAC,CACRwD,QAAS,CAAEC,EAAAA,aAAcwD,EAAAA,cACzBvD,QAAS,CAAEiD,GACXhD,aAAc,CAAEgD,OAWlBE,EAdA,GCTAK,EAAA,WAcE,SAAAA,EAC4BxI,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAJOC,KAAAuI,WAAa,eAoBhC,OAbED,EAAArI,UAAAwB,SAAA,WACEzB,KAAKsF,QAAQtF,KAAKuF,QAGpB+C,EAAArI,UAAA2F,YAAA,WACE5F,KAAKD,SAASiB,YAAYhB,KAAKF,SAASS,KAAMP,KAAKuI,aAGrDD,EAAArI,UAAAqF,QAAA,SAAQC,QAAA,IAAAA,IAAAA,EAAiBvF,KAAKuF,OACxBA,GACFvF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAMP,KAAKuI,iCA1BrD1C,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,yBACV6D,SAAU,qGAUP3E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAfsDC,EAAAA,4CAQ/Da,EAAAA,sBAEAqG,EAAAA,YAAWpH,KAAA,CAAC,uBAsBfkH,EAhCA,GCAAG,EAAA,WAKA,SAAAA,KAK8B,2BAL7B9D,EAAAA,SAAQvD,KAAA,CAAC,CACRwD,QAAS,CAAEC,EAAAA,cACXC,QAAS,CAAEwD,GACXvD,aAAc,CAAEuD,OAEYG,EAV9B,GCAAC,EAAA,WAqEE,SAAAA,EAC4B5I,EAClBC,EACAsD,GAFkBrD,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EACAC,KAAAqD,GAAAA,EAfDrD,KAAA2I,gBAAuB,CAACC,KAAM,KAAMC,KAAM,aAC1C7I,KAAA8I,gBAAuB,GAQf9I,KAAAuI,WAAa,eAwBhC,OAfEG,EAAAzI,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,IACbrD,KAAKsF,QAAQtF,KAAKuF,OAClBvF,KAAK+I,eAAiBC,QAAQhJ,KAAKiJ,aAAejJ,KAAKkJ,iBAAmBlJ,KAAKmJ,uBAGjFT,EAAAzI,UAAA2F,YAAA,WACE5F,KAAKD,SAASiB,YAAYhB,KAAKF,SAASS,KAAMP,KAAKuI,aAGrDG,EAAAzI,UAAAqF,QAAA,SAAQC,QAAA,IAAAA,IAAAA,EAAiBvF,KAAKuF,OACxBA,GACFvF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAMP,KAAKuI,iCAlFrD1C,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,aACV6D,SAAU,87DA+DP3E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAtEqDC,EAAAA,iBAA9CmD,EAAAA,6CAoDhBtC,EAAAA,2BAEAA,EAAAA,+BACAA,EAAAA,oCACAA,EAAAA,+BACAA,EAAAA,+BACAA,EAAAA,8BAEAA,EAAAA,oCACAA,EAAAA,gCAEAA,EAAAA,sCACAA,EAAAA,SA0BHuG,EA1FA,GCAAU,EAAA,WAMA,SAAAA,KAa8B,2BAb7BzE,EAAAA,SAAQvD,KAAA,CAAC,CACRwD,QAAS,CACPC,EAAAA,aACAH,GAEFI,QAAS,CACP4D,EACAhE,GAEFK,aAAc,CACZ2D,OAG0BU,EAnB9B,GCAAC,EAAA,WAaE,SAAAA,EAAoBhG,GAAArD,KAAAqD,GAAAA,EAKtB,OAHEgG,EAAApJ,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBAZhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,qBACV6D,SAAU,+HANQrB,EAAAA,cAkBpB4E,EAlBA,GCAAC,EAAA,WAcE,SAAAA,EAAoBjG,GAAArD,KAAAqD,GAAAA,EAKtB,OAHEiG,EAAArJ,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBAbhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,mBACV6D,SAAU,mIANQrB,EAAAA,cAmBpB6E,EAnBA,GCAAC,EAAA,WAcE,SAAAA,EAAoBlG,GAAArD,KAAAqD,GAAAA,EAKtB,OAHEkG,EAAAtJ,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBAbhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,qBACV6D,SAAU,mIANQrB,EAAAA,cAmBpB8E,EAnBA,GCAAC,EAAA,WAYE,SAAAA,EAAoBnG,GAAArD,KAAAqD,GAAAA,EAKtB,OAHEmG,EAAAvJ,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBAXhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,wBACV6D,SAAU,yJANQrB,EAAAA,cAiBpB+E,EAjBA,GCAAC,EAAA,WAkBE,SAAAA,EAC4B3J,EAClBC,GADkBC,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EAoDZ,OAjDE0J,EAAAxJ,UAAAwB,SAAA,WACEzB,KAAK0F,kBAAkB1F,KAAK2F,SAC5B3F,KAAK0J,UAAU1J,KAAK2J,SACpB3J,KAAKsF,QAAQtF,KAAKuF,OAClBvF,KAAK4J,YAAY5J,KAAK6J,WACtB7J,KAAKwF,YAAYxF,KAAKyF,YAGxBgE,EAAAxJ,UAAA2F,YAAA,WACE5F,KAAKD,SAASiB,YAAYhB,KAAKF,SAASS,KAAM,kBAGhDkJ,EAAAxJ,UAAAyJ,UAAA,SAAUC,QAAA,IAAAA,IAAAA,EAAmB3J,KAAK2J,SAC5BA,GACF3J,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,oBAI/CkJ,EAAAxJ,UAAAqF,QAAA,SAAQC,QAAA,IAAAA,IAAAA,EAAiBvF,KAAKuF,OACxBA,GACFvF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,kBAI/CkJ,EAAAxJ,UAAA2J,YAAA,SAAYC,QAAA,IAAAA,IAAAA,EAAqB7J,KAAK6J,WAChCA,GACF7J,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,sBAI/CkJ,EAAAxJ,UAAAuF,YAAA,SAAYC,QAAA,IAAAA,IAAAA,EAAqBzF,KAAKyF,WAChCA,GACFzF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,uBAI/CkJ,EAAAxJ,UAAA6J,cAAA,SAAcvE,QAAA,IAAAA,IAAAA,EAAiBvF,KAAKuF,OAClCwE,QAAQC,KAAK,qDACTzE,GACFvF,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAM,kBAI/CkJ,EAAAxJ,UAAAyF,kBAAA,SAAkBC,GAChB,QADgB,IAAAA,IAAAA,EAAe3F,KAAK2F,UACpB,IAAZA,EAAmB,KACf5D,EAAW4D,EAAU,WAAWA,EAAO,QAAUhG,EAAkB,GACzEK,KAAKD,SAASkB,SAASjB,KAAKF,SAASS,KAAMwB,yBAhEhD8D,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,cACV6D,SAAU,qGAYP3E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAnBuDC,EAAAA,8CAUhEa,EAAAA,uBACAA,EAAAA,qBACAA,EAAAA,yBACAA,EAAAA,yBACAA,EAAAA,sBAEAqG,EAAAA,YAAWpH,KAAA,CAAC,oBAwDfqI,EAxEA,GCAAQ,EAAA,WAuBE,SAAAA,EAAoB5G,GAAArD,KAAAqD,GAAAA,EAKtB,OAHE4G,EAAAhK,UAAAiK,OAAA,WACElK,KAAKqD,GAAGQ,cAAcrD,UAAU0J,OAAO,6BAR1ClI,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,gEAhBVwC,EAAAA,cAyBFwF,EA5BA,GAiCAE,EAAA,WAIE,SAAAA,EAAoBC,GAAApK,KAAAoK,SAAAA,EAOtB,OAJED,EAAAlK,UAAA2B,WADA,SACWC,GACTA,EAAOC,iBACP9B,KAAKoK,SAASF,8BATjBlI,EAAAA,UAASZ,KAAA,CAAC,CACTa,SAAU,sEAGoBgI,yCAE7B7H,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,cAK1B+I,EAXA,gBAiDE,SAAAE,IAhB0BrK,KAAAsK,KAAO,MAiBnC,OAbSD,EAAApK,UAAAsK,UAAP,SAAiBC,GACf,QAAOA,EAAKC,SAGPJ,EAAApK,UAAAyK,QAAP,SAAeF,GACb,QAAOA,EAAKG,OAGPN,EAAApK,UAAA2K,YAAP,SAAmBC,GACjB7K,KAAK8K,cAAgBC,KAAKC,MAAMD,KAAKE,UAAUjL,KAAKkL,gCAjCvDrF,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,kBACV6D,SAAU,2kBAeT3D,EAAAA,sBAEAqG,EAAAA,YAAWpH,KAAA,CAAC,mCACZoH,EAAAA,YAAWpH,KAAA,CAAC,gBAiBfiJ,kBAqBE,SAAAc,EAAqBlF,EAAwB5C,GAAxBrD,KAAAiG,OAAAA,EAAwBjG,KAAAqD,GAAAA,EAqB/C,OAnBS8H,EAAAlL,UAAAsC,SAAP,WACE,QAAOvC,KAAKwK,KAAKY,UAGZD,EAAAlL,UAAAoL,WAAP,WACE,QAAOrL,KAAKwK,KAAKxD,UAGZmE,EAAAlL,UAAAqL,QAAP,WACE,OAAOtL,KAAKwK,KAAK1D,KAGZqE,EAAAlL,UAAAsL,SAAP,WACE,OAAOvL,KAAKiG,OAAOsF,SAASvL,KAAKsL,WAAW,IAG9CH,EAAAlL,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBAtChBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,uBACV6D,SAAU,8kBAzEH+B,EAAAA,cAXPpD,EAAAA,4CAmGCtC,EAAAA,SAuBHgJ,kBAoCE,SAAAK,EAC4B1L,EAClBC,EACAkG,EACA5C,GAHkBrD,KAAAF,SAAAA,EAClBE,KAAAD,SAAAA,EACAC,KAAAiG,OAAAA,EACAjG,KAAAqD,GAAAA,EAkDZ,OA/CSmI,EAAAvL,UAAAwL,WAAP,eACQC,EAAW1L,KAAK2L,aAChB7H,EAAU,CACd8H,YAAY,EACZF,SAAYA,EACZG,WAAYH,GAEV1L,KAAK8L,eAEPhI,EADgB,YAAY9D,KAAK+L,KAAKC,UACnB,GAErB,OAAOlI,GAGF0H,EAAAvL,UAAAgM,YAAP,WACE,OAAOjM,KAAK2L,aAAe,WAAa3L,KAAKkM,iBAAmB,WAAa,IAGxEV,EAAAvL,UAAA6L,WAAP,WACE,QAAO9L,KAAK+L,KAAKC,SAGZR,EAAAvL,UAAAkM,QAAP,WACE,QAAOnM,KAAK+L,KAAKK,OAGZZ,EAAAvL,UAAA0L,WAAP,WACE,SAAO3L,KAAK+L,KAAKM,aAAcrM,KAAK+L,KAAKM,WAAWX,WAG/CF,EAAAvL,UAAAiM,eAAP,WACE,MAAyC,SAAlClM,KAAK+L,KAAKjF,IAAIwF,UAAU,EAAG,IAG7Bd,EAAAvL,UAAAsM,OAAP,WACE,QAAOvM,KAAK+L,KAAKnD,MAGZ4C,EAAAvL,UAAAuM,WAAP,WACMxM,KAAKF,SAASS,KAAKC,UAAUC,SAAS,iBACxCT,KAAKD,SAASiB,YAAYhB,KAAKF,SAASS,KAAM,iBAIlDiL,EAAAvL,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBAtFhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,uBACV6D,SAAU,0vCAiCP3E,EAAAA,OAAMC,KAAA,CAACC,EAAAA,mBAzJVC,EAAAA,iBAKOuG,EAAAA,cAXPpD,EAAAA,4CA4JCtC,EAAAA,SAwDHqJ,kBA6BE,SAAAiB,EAAqBxG,EAAwB5C,GAAxBrD,KAAAiG,OAAAA,EAAwBjG,KAAAqD,GAAAA,EAK/C,OAbSoJ,EAAAxM,UAAAkM,QAAP,WACE,QAAOnM,KAAK+L,KAAKK,OAGZK,EAAAxM,UAAAsM,OAAP,WACE,QAAOvM,KAAK+L,KAAKnD,MAKnB6D,EAAAxM,UAAAwB,SAAA,WACEuD,EAAQhF,KAAKqD,yBA9BhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,2BACV6D,SAAU,+eAYD,0FAzNF+B,EAAAA,cAXPpD,EAAAA,4CAuOCtC,EAAAA,SAeHsK,kBASE,SAAAC,EAAoBrJ,EAAwBtD,GAAxBC,KAAAqD,GAAAA,EAAwBrD,KAAAD,SAAAA,EAyB9C,OAvBE2M,EAAAzM,UAAAwB,SAAA,eACQoC,EAA6B7D,KAAKqD,GAAGQ,cACrC8I,EAAK3M,KAAKD,SAAS6M,cAAc,MACjCC,EAAO7M,KAAKD,SAAS+M,WAAW9M,KAAK2K,MAAMkC,MAIjD,GAFA7M,KAAKD,SAASkB,SAAS0L,EAAI,aAEtB3M,KAAK2K,MAAMS,SAAQ,KAChBtH,EAAU9D,KAAK2K,MAAMS,SAC3BpL,KAAKD,SAASkB,SAAS0L,EAAI7I,GAG7B,GAAK9D,KAAK2K,MAAMoC,QAAU,KAClBA,EAAU/M,KAAKD,SAAS6M,cAAc5M,KAAK2K,MAAMoC,QAAQ5I,SAE/DnE,KAAKD,SAASiN,YAAYD,EAASF,GACnC7M,KAAKD,SAASiN,YAAYL,EAAII,QAE9B/M,KAAKD,SAASiN,YAAYL,EAAIE,GAEhC7M,KAAKD,SAASiN,YAAYnJ,EAAe8I,GACzC3H,EAAQhF,KAAKqD,yBA9BhBwC,EAAAA,UAASzE,KAAA,CAAC,CACTa,SAAU,wBACV6D,SAAU,gDA1PVrB,EAAAA,kBAMAnD,EAAAA,4CAuPCa,EAAAA,SA2BHuK,KC3RAO,EAAA,WAqBA,SAAAA,KAqCgC,2BArC/BtI,EAAAA,SAAQvD,KAAA,CAAC,CACRwD,QAAS,CACPC,EAAAA,aACAwD,EAAAA,aACA3D,GAEFI,QAAS,CACPuE,EACAC,EACAC,EACAC,EACAC,EACAY,EACAoC,EACAtB,EACAK,EACAkB,EACAzC,EACAE,EACAzF,GAEFK,aAAc,CACZsE,EACAC,EACAC,EACAC,EACAA,EACAC,EACAY,EACAoC,EACAtB,EACAK,EACAkB,EACAzC,EACAE,OAG4B8C,EA1DhC","sourcesContent":["export const sidebarCssClasses: Array<string> = [\r\n  'sidebar-show',\r\n  'sidebar-sm-show',\r\n  'sidebar-md-show',\r\n  'sidebar-lg-show',\r\n  'sidebar-xl-show'\r\n];\r\n\r\nexport const asideMenuCssClasses: Array<string> = [\r\n  'aside-menu-show',\r\n  'aside-menu-sm-show',\r\n  'aside-menu-md-show',\r\n  'aside-menu-lg-show',\r\n  'aside-menu-xl-show'\r\n];\r\n","import {Inject, Injectable, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nconst RemoveClasses = (NewClassNames) => {\r\n  const MatchClasses = NewClassNames.map((Class) => document.body.classList.contains(Class));\r\n  return MatchClasses.indexOf(true) !== -1;\r\n};\r\n\r\nexport const ToggleClasses = (Toggle, ClassNames) => {\r\n  const Level = ClassNames.indexOf(Toggle);\r\n  const NewClassNames = ClassNames.slice(0, Level + 1);\r\n\r\n  if (RemoveClasses(NewClassNames)) {\r\n    NewClassNames.map((Class) => document.body.classList.remove(Class));\r\n  } else {\r\n    document.body.classList.add(Toggle);\r\n  }\r\n};\r\n\r\n@Injectable()\r\nexport class ClassToggler {\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n  ) {}\r\n\r\n  removeClasses(NewClassNames) {\r\n    const MatchClasses = NewClassNames.map((Class) => this.document.body.classList.contains(Class));\r\n    return MatchClasses.indexOf(true) !== -1;\r\n  }\r\n\r\n  toggleClasses(Toggle, ClassNames) {\r\n    const Level = ClassNames.indexOf(Toggle);\r\n    const NewClassNames = ClassNames.slice(0, Level + 1);\r\n\r\n    if (this.removeClasses(NewClassNames)) {\r\n      NewClassNames.map((Class) => this.renderer.removeClass(this.document.body, Class));\r\n    } else {\r\n      this.renderer.addClass(this.document.body, Toggle);\r\n    }\r\n  }\r\n}\r\n","import {Directive, ElementRef, HostListener, Inject, Input, OnInit, Renderer2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport { asideMenuCssClasses, sidebarCssClasses } from '../classes';\nimport { ClassToggler } from '../toggle-classes';\n\n/**\n* Allows the sidebar to be toggled via click.\n*/\n@Directive({\n  selector: '[appSidebarToggler]',\n  providers: [ClassToggler]\n})\nexport class SidebarToggleDirective implements OnInit {\n  @Input('appSidebarToggler') breakpoint: string;\n  public bp;\n  constructor(private classToggler: ClassToggler) {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const cssClass = this.bp ? `sidebar-${this.bp}-show` : sidebarCssClasses[0];\n    this.classToggler.toggleClasses(cssClass, sidebarCssClasses);\n  }\n}\n\n@Directive({\n  selector: '[appSidebarMinimizer]'\n})\nexport class SidebarMinimizeDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('sidebar-minimized') ?\n      this.renderer.removeClass(body, 'sidebar-minimized') :\n      this.renderer.addClass(body, 'sidebar-minimized');\n    // document.body.classList.toggle('sidebar-minimized');\n  }\n}\n\n@Directive({\n  selector: '[appMobileSidebarToggler]'\n})\nexport class MobileSidebarToggleDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('sidebar-show') ?\n      this.renderer.removeClass(body, 'sidebar-show') :\n      this.renderer.addClass(body, 'sidebar-show');\n    // document.body.classList.toggle('sidebar-show');\n  }\n}\n\n/**\n* Allows the off-canvas sidebar to be closed via click.\n*/\n@Directive({\n  selector: '[appSidebarClose]'\n})\nexport class SidebarOffCanvasCloseDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  // Check if element has class\n  private hasClass(target: any, elementClassName: string) {\n    return new RegExp('(\\\\s|^)' + elementClassName + '(\\\\s|$)').test(target.className);\n  }\n\n  // Toggle element class\n  private toggleClass(elem: any, elementClassName: string) {\n    let newClass = ' ' + elem.className.replace( /[\\t\\r\\n]/g, ' ' ) + ' ';\n    if (this.hasClass(elem, elementClassName)) {\n      while (newClass.indexOf(' ' + elementClassName + ' ') >= 0 ) {\n        newClass = newClass.replace( ' ' + elementClassName + ' ' , ' ' );\n      }\n      elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n    } else {\n      elem.className += ' ' + elementClassName;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n\n    const body = this.document.body;\n    if (this.hasClass(body, 'sidebar-off-canvas')) {\n      body.classList.contains('sidebar-show') ?\n        this.renderer.removeClass(body, 'sidebar-show') :\n        this.renderer.addClass(body, 'sidebar-show');\n      // this.toggleClass(document.body, 'sidebar-opened');\n    }\n  }\n}\n\n@Directive({\n  selector: '[appBrandMinimizer]'\n})\nexport class BrandMinimizeDirective {\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n  ) { }\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const body = this.document.body;\n    body.classList.contains('brand-minimized') ?\n      this.renderer.removeClass(body, 'brand-minimized') :\n      this.renderer.addClass(body, 'brand-minimized');\n    // document.body.classList.toggle('brand-minimized');\n  }\n}\n\n\n/**\n* Allows the aside to be toggled via click.\n*/\n@Directive({\n  selector: '[appAsideMenuToggler]',\n  providers: [ClassToggler]\n})\nexport class AsideToggleDirective implements OnInit {\n  @Input('appAsideMenuToggler') breakpoint: string;\n  public bp;\n  constructor(private classToggler: ClassToggler) {}\n  ngOnInit(): void {\n    this.bp = this.breakpoint;\n  }\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    const cssClass = this.bp ? `aside-menu-${this.bp}-show` : asideMenuCssClasses[0];\n    this.classToggler.toggleClasses(cssClass, asideMenuCssClasses);\n  }\n}\n\n@Directive({\n  selector: '[appHtmlAttr]'\n})\nexport class HtmlAttributesDirective implements OnInit {\n  @Input() appHtmlAttr: {[key: string]: string };\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit() {\n    const attribs = this.appHtmlAttr;\n    for (const attr in attribs) {\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\n        this.setStyle(attribs[attr]);\n      } else if (attr === 'class') {\n        this.addClass(attribs[attr]);\n      } else {\n        this.setAttrib(attr, attribs[attr]);\n      }\n    }\n  }\n\n  private setStyle(styles) {\n    for (const style in styles) {\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\n    }\n  }\n\n  private addClass(classes) {\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\n    classArray.filter((element) => element.length > 0).forEach(element => {\n      this.renderer.addClass(this.el.nativeElement, element );\n    });\n  }\n\n  private setAttrib(key, value) {\n    this.renderer.setAttribute(this.el.nativeElement, key, value );\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule} from '@angular/core';\r\nimport {\r\n  AsideToggleDirective,\r\n  BrandMinimizeDirective,\r\n  MobileSidebarToggleDirective,\r\n  SidebarToggleDirective,\r\n  SidebarMinimizeDirective,\r\n  SidebarOffCanvasCloseDirective,\r\n  HtmlAttributesDirective\r\n} from './layout.directive';\r\nimport { ClassToggler } from '../toggle-classes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AsideToggleDirective,\r\n    BrandMinimizeDirective,\r\n    MobileSidebarToggleDirective,\r\n    SidebarToggleDirective,\r\n    SidebarMinimizeDirective,\r\n    SidebarOffCanvasCloseDirective,\r\n    HtmlAttributesDirective\r\n  ],\r\n  declarations: [\r\n    AsideToggleDirective,\r\n    BrandMinimizeDirective,\r\n    MobileSidebarToggleDirective,\r\n    SidebarToggleDirective,\r\n    SidebarMinimizeDirective,\r\n    SidebarOffCanvasCloseDirective,\r\n    HtmlAttributesDirective\r\n  ],\r\n  providers: [\r\n    ClassToggler\r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","export function Replace(el: any): any {\r\n  const nativeElement: HTMLElement = el.nativeElement;\r\n  const parentElement: HTMLElement = nativeElement.parentElement;\r\n  // move all children out of the element\r\n  while (nativeElement.firstChild) {\r\n    parentElement.insertBefore(nativeElement.firstChild, nativeElement);\r\n  }\r\n  // remove the empty element(the host)\r\n  parentElement.removeChild(nativeElement);\r\n}\r\n","import {Component, ElementRef, Input, OnInit, OnDestroy, Inject, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport { asideMenuCssClasses, Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-aside',\r\n  template: `\r\n    <aside class=\"aside-menu\">\r\n      <ng-content></ng-content>\r\n    </aside>\r\n  `\r\n})\r\nexport class AppAsideComponent implements OnInit, OnDestroy {\r\n  @Input() display: any;\r\n  @Input() fixed: boolean;\r\n  @Input() offCanvas: boolean;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.isOffCanvas(this.offCanvas);\r\n    this.displayBreakpoint(this.display);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, 'aside-menu-fixed');\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'aside-menu-fixed');\r\n    }\r\n  }\r\n\r\n  isOffCanvas(offCanvas: boolean = this.offCanvas): void {\r\n    if (offCanvas) {\r\n      this.renderer.addClass(this.document.body, 'aside-menu-off-canvas');\r\n    }\r\n  }\r\n\r\n  displayBreakpoint(display: any = this.display): void {\r\n    if (display !== false ) {\r\n      const cssClass = this.display ? `aside-menu-${this.display}-show` : asideMenuCssClasses[0];\r\n      this.renderer.addClass(this.document.body, cssClass);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './../shared/layout/layout.module';\r\n\r\nimport { AppAsideComponent } from './app-aside.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule\r\n  ],\r\n  exports: [\r\n    AppAsideComponent,\r\n    LayoutModule\r\n  ],\r\n  declarations: [\r\n    AppAsideComponent\r\n  ]\r\n})\r\nexport class AppAsideModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs/index';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AppBreadcrumbService {\r\n\r\n  breadcrumbs: Observable<Array<Object>>;\r\n\r\n  private _breadcrumbs: BehaviorSubject<Array<Object>>;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) {\r\n\r\n    this._breadcrumbs = new BehaviorSubject<Object[]>(new Array<Object>());\r\n\r\n    this.breadcrumbs = this._breadcrumbs.asObservable();\r\n\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event) => {\r\n      const breadcrumbs = [];\r\n      let currentRoute = this.route.root,\r\n      url = '';\r\n      do {\r\n        const childrenRoutes = currentRoute.children;\r\n        currentRoute = null;\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        childrenRoutes.forEach(route => {\r\n          if (route.outlet === 'primary') {\r\n            const routeSnapshot = route.snapshot;\r\n            url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\r\n            breadcrumbs.push({\r\n              label: route.snapshot.data,\r\n              url:   url\r\n            });\r\n            currentRoute = route;\r\n          }\r\n        });\r\n      } while (currentRoute);\r\n\r\n      this._breadcrumbs.next(Object.assign([], breadcrumbs));\r\n\r\n      return breadcrumbs;\r\n    });\r\n  }\r\n}\r\n","import {Component, ElementRef, Inject, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {AppBreadcrumbService} from './app-breadcrumb.service';\r\nimport {Replace} from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  template: `\r\n    <ng-template ngFor let-breadcrumb [ngForOf]=\"breadcrumbs | async\" let-last = last>\r\n      <li class=\"breadcrumb-item\"\r\n          *ngIf=\"breadcrumb.label.title && (breadcrumb.url.slice(-1) == '/' || last)\"\r\n          [ngClass]=\"{active: last}\">\r\n        <a *ngIf=\"!last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</a>\r\n        <span *ngIf=\"last\" [routerLink]=\"breadcrumb.url\">{{breadcrumb.label.title}}</span>\r\n      </li>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class AppBreadcrumbComponent implements OnInit, OnDestroy {\r\n  @Input() fixed: boolean;\r\n  public breadcrumbs;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n    public service: AppBreadcrumbService,\r\n    public el: ElementRef\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.breadcrumbs = this.service.breadcrumbs;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, 'breadcrumb-fixed');\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'breadcrumb-fixed');\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule, ModuleWithProviders} from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n// App Breadcrumb Component\r\nimport { AppBreadcrumbService } from './app-breadcrumb.service';\r\nimport { AppBreadcrumbComponent } from './app-breadcrumb.component';\r\n\r\n// @dynamic\r\n@NgModule({\r\n  imports: [ CommonModule, RouterModule ],\r\n  exports: [ AppBreadcrumbComponent ],\r\n  declarations: [ AppBreadcrumbComponent ]\r\n})\r\nexport class AppBreadcrumbModule {\r\n  static forRoot(config?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: AppBreadcrumbModule,\r\n      providers: [\r\n        AppBreadcrumbService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {Component, HostBinding, Inject, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-footer, cui-footer',\r\n  template: `<ng-content></ng-content>`\r\n})\r\nexport class AppFooterComponent implements OnInit, OnDestroy {\r\n  @Input() fixed: boolean;\r\n\r\n  @HostBinding('class.app-footer') true;\r\n\r\n  private readonly fixedClass = 'footer-fixed';\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isFixed(this.fixed);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, this.fixedClass);\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, this.fixedClass);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppFooterComponent } from './app-footer.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  exports: [ AppFooterComponent ],\r\n  declarations: [ AppFooterComponent ]\r\n})\r\nexport class AppFooterModule {}\r\n","import {Component, ElementRef, Input, OnInit, OnDestroy, Inject, Renderer2} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  template: `\r\n    <header class=\"app-header navbar\">\r\n      <ng-template [ngIf]=\"mobileSidebarToggler != false\">\r\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appSidebarToggler>\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n        <a class=\"navbar-brand\" [href]=\"navbarBrandHref\">\r\n          <ng-template [ngIf]=\"navbarBrandImg\">\r\n          <img *ngIf=\"navbarBrand\"\r\n               [appHtmlAttr]=\"navbarBrand\"\r\n               [ngClass]=\"'navbar-brand'\">\r\n          <img *ngIf=\"navbarBrandFull\"\r\n               [appHtmlAttr]=\"navbarBrandFull\"\r\n               [ngClass]=\"'navbar-brand-full'\">\r\n          <img *ngIf=\"navbarBrandMinimized\"\r\n               [appHtmlAttr]=\"navbarBrandMinimized\"\r\n               [ngClass]=\"'navbar-brand-minimized'\">\r\n          </ng-template>\r\n          <ng-template [ngIf]=\"!navbarBrandImg\">\r\n            <div class=\"navbar-brand-full\" [innerHTML]=\"navbarBrandText.text\"></div>\r\n            <div class=\"navbar-brand-minimized\" [innerHTML]=\"navbarBrandText.icon\"></div>\r\n          </ng-template>\r\n        </a>\r\n      <ng-template [ngIf]=\"sidebarToggler != false\">\r\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appSidebarToggler]=\"sidebarToggler\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n      <ng-content></ng-content>\r\n      <ng-template [ngIf]=\"asideMenuToggler != false\">\r\n        <button class=\"navbar-toggler d-md-down-none\" type=\"button\" [appAsideMenuToggler]=\"asideMenuToggler\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n      <ng-template [ngIf]=\"mobileAsideMenuToggler != false\">\r\n        <button class=\"navbar-toggler d-lg-none\" type=\"button\" appAsideMenuToggler>\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </ng-template>\r\n    </header>\r\n  `\r\n})\r\nexport class AppHeaderComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() fixed: boolean;\r\n\r\n  @Input() navbarBrand: any;\r\n  @Input() navbarBrandFull: any;\r\n  @Input() navbarBrandMinimized: any;\r\n  @Input() navbarBrandText: any = {icon: 'ð²', text: 'ð² CoreUI'};\r\n  @Input() navbarBrandHref: any = '';\r\n\r\n  @Input() sidebarToggler: any;\r\n  @Input() mobileSidebarToggler: any;\r\n\r\n  @Input() asideMenuToggler: any;\r\n  @Input() mobileAsideMenuToggler: any;\r\n\r\n  private readonly fixedClass = 'header-fixed';\r\n  navbarBrandImg: boolean;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    Replace(this.el);\r\n    this.isFixed(this.fixed);\r\n    this.navbarBrandImg = Boolean(this.navbarBrand || this.navbarBrandFull || this.navbarBrandMinimized);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, this.fixedClass);\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, this.fixedClass);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule} from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LayoutModule } from '../shared/layout/layout.module';\nimport { AppHeaderComponent } from './app-header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutModule\n  ],\n  exports: [\n    AppHeaderComponent,\n    LayoutModule\n  ],\n  declarations: [\n    AppHeaderComponent\n  ]\n})\nexport class AppHeaderModule {}\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-footer',\r\n  template: `\r\n    <div class=\"sidebar-footer\">\r\n      <ng-content></ng-content>\r\n    </div>`\r\n})\r\nexport class AppSidebarFooterComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-form',\r\n  template: `\r\n    <form class=\"sidebar-form\">\r\n      <ng-content></ng-content>\r\n    </form>\r\n  `\r\n})\r\nexport class AppSidebarFormComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-header',\r\n  template: `\r\n    <div class=\"sidebar-header\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class AppSidebarHeaderComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit  } from '@angular/core';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-minimizer',\r\n  template: `\r\n    <button class=\"sidebar-minimizer\" type=\"button\" appSidebarMinimizer appBrandMinimizer></button>\r\n  `\r\n})\r\nexport class AppSidebarMinimizerComponent implements OnInit {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { Component, Input, Inject, HostBinding, OnInit, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { sidebarCssClasses } from '../shared';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `<ng-content></ng-content>`\r\n})\r\nexport class AppSidebarComponent implements OnInit, OnDestroy {\r\n  @Input() compact: boolean;\r\n  @Input() display: any;\r\n  @Input() fixed: boolean;\r\n  @Input() minimized: boolean;\r\n  @Input() offCanvas: boolean;\r\n\r\n  @HostBinding('class.sidebar') true;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.displayBreakpoint(this.display);\r\n    this.isCompact(this.compact);\r\n    this.isFixed(this.fixed);\r\n    this.isMinimized(this.minimized);\r\n    this.isOffCanvas(this.offCanvas);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderer.removeClass(this.document.body, 'sidebar-fixed' );\r\n  }\r\n\r\n  isCompact(compact: boolean = this.compact): void {\r\n    if (compact) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-compact' );\r\n    }\r\n  }\r\n\r\n  isFixed(fixed: boolean = this.fixed): void {\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-fixed');\r\n    }\r\n  }\r\n\r\n  isMinimized(minimized: boolean = this.minimized): void {\r\n    if (minimized) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-minimized');\r\n    }\r\n  }\r\n\r\n  isOffCanvas(offCanvas: boolean = this.offCanvas): void {\r\n    if (offCanvas) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-off-canvas');\r\n    }\r\n  }\r\n\r\n  fixedPosition(fixed: boolean = this.fixed): void {\r\n    console.warn('deprecated fixedPosition(), use isFixed() instead');\r\n    if (fixed) {\r\n      this.renderer.addClass(this.document.body, 'sidebar-fixed');\r\n    }\r\n  }\r\n\r\n  displayBreakpoint(display: any = this.display): void {\r\n    if (display !== false) {\r\n      const cssClass = display ? `sidebar-${display}-show` : sidebarCssClasses[0];\r\n      this.renderer.addClass(this.document.body, cssClass);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener, Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport {DOCUMENT} from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Replace } from '../shared';\r\n\r\n@Directive({\r\n  selector: '[appNavDropdown]'\r\n})\r\nexport class NavDropdownDirective {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  toggle() {\r\n    this.el.nativeElement.classList.toggle('open');\r\n  }\r\n}\r\n\r\n/**\r\n* Allows the dropdown to be toggled via click.\r\n*/\r\n@Directive({\r\n  selector: '[appNavDropdownToggle]'\r\n})\r\nexport class NavDropdownToggleDirective {\r\n  constructor(private dropdown: NavDropdownDirective) {}\r\n\r\n  @HostListener('click', ['$event'])\r\n  toggleOpen($event: any) {\r\n    $event.preventDefault();\r\n    this.dropdown.toggle();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar-nav',\r\n  template: `\r\n    <ul class=\"nav\">\r\n      <ng-template ngFor let-navitem [ngForOf]=\"navItems\">\r\n        <li *ngIf=\"isDivider(navitem)\" class=\"nav-divider\"></li>\r\n        <ng-template [ngIf]=\"isTitle(navitem)\">\r\n          <app-sidebar-nav-title [title]='navitem'></app-sidebar-nav-title>\r\n        </ng-template>\r\n        <ng-template [ngIf]=\"!isDivider(navitem)&&!isTitle(navitem)\">\r\n          <app-sidebar-nav-item [item]='navitem'></app-sidebar-nav-item>\r\n        </ng-template>\r\n      </ng-template>\r\n    </ul>\r\n  `\r\n})\r\nexport class AppSidebarNavComponent implements OnChanges {\r\n  @Input() navItems: Array<any>;\r\n\r\n  @HostBinding('class.sidebar-nav') true;\r\n  @HostBinding('attr.role') role = 'nav';\r\n\r\n  public navItemsArray: Array<any>;\r\n\r\n  public isDivider(item) {\r\n    return item.divider ? true : false;\r\n  }\r\n\r\n  public isTitle(item) {\r\n    return item.title ? true : false;\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    this.navItemsArray = JSON.parse(JSON.stringify(this.navItems));\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar-nav-item',\r\n  template: `\r\n    <li *ngIf=\"!isDropdown(); else dropdown\" [ngClass]=\"hasClass() ? 'nav-item ' + item.class : 'nav-item'\">\r\n      <app-sidebar-nav-link [link]='item'></app-sidebar-nav-link>\r\n    </li>\r\n    <ng-template #dropdown>\r\n      <li [ngClass]=\"hasClass() ? 'nav-item nav-dropdown ' + item.class : 'nav-item nav-dropdown'\"\r\n          [class.open]=\"isActive()\"\r\n          routerLinkActive=\"open\"\r\n          appNavDropdown>\r\n        <app-sidebar-nav-dropdown [link]='item'></app-sidebar-nav-dropdown>\r\n      </li>\r\n    </ng-template>\r\n    `\r\n})\r\nexport class AppSidebarNavItemComponent implements OnInit {\r\n  @Input() item: any;\r\n\r\n  constructor( private router: Router, private el: ElementRef ) { }\r\n\r\n  public hasClass() {\r\n    return this.item.class ? true : false;\r\n  }\r\n\r\n  public isDropdown() {\r\n    return this.item.children ? true : false;\r\n  }\r\n\r\n  public thisUrl() {\r\n    return this.item.url;\r\n  }\r\n\r\n  public isActive() {\r\n    return this.router.isActive(this.thisUrl(), false);\r\n  }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar-nav-link',\r\n  template: `\r\n    <ng-container [ngSwitch]=\"getLinkType()\">\r\n      <a *ngSwitchCase=\"'disabled'\"\r\n      [attr.disabled]=\"true\"\r\n      [appHtmlAttr]=\"link.attributes\"\r\n      href=\"\"\r\n      [ngClass]=\"getClasses()\">\r\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\r\n        {{ link.name }}\r\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\r\n      </a>\r\n      <a *ngSwitchCase=\"'external'\" [ngClass]=\"getClasses()\" href=\"{{link.url}}\" [appHtmlAttr]=\"link.attributes\">\r\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\r\n        {{ link.name }}\r\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\r\n      </a>\r\n      <a *ngSwitchDefault\r\n        [ngClass]=\"getClasses()\"\r\n        [appHtmlAttr]=\"link.attributes\"\r\n        routerLinkActive=\"active\"\r\n        [routerLink]=\"[link.url]\"\r\n        (click)=\"hideMobile()\">\r\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\r\n        {{ link.name }}\r\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\r\n      </a>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class AppSidebarNavLinkComponent implements OnInit {\r\n  @Input() link: any;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: any,\r\n    private renderer: Renderer2,\r\n    private router: Router,\r\n    private el: ElementRef\r\n  ) { }\r\n\r\n  public getClasses() {\r\n    const disabled = this.isDisabled();\r\n    const classes = {\r\n      'nav-link': true,\r\n      'disabled': disabled,\r\n      'btn-link': disabled\r\n    };\r\n    if (this.hasVariant()) {\r\n      const variant = `nav-link-${this.link.variant}`;\r\n      classes[variant] = true;\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  public getLinkType() {\r\n    return this.isDisabled() ? 'disabled' : this.isExternalLink() ? 'external' : '';\r\n  }\r\n\r\n  public hasVariant() {\r\n    return this.link.variant ? true : false;\r\n  }\r\n\r\n  public isBadge() {\r\n    return this.link.badge ? true : false;\r\n  }\r\n\r\n  public isDisabled() {\r\n    return this.link.attributes && this.link.attributes.disabled ? true : false;\r\n  }\r\n\r\n  public isExternalLink() {\r\n    return this.link.url.substring(0, 4) === 'http' ? true : false;\r\n  }\r\n\r\n  public isIcon() {\r\n    return this.link.icon ? true : false;\r\n  }\r\n\r\n  public hideMobile() {\r\n    if (this.document.body.classList.contains('sidebar-show')) {\r\n      this.renderer.removeClass(this.document.body, 'sidebar-show');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar-nav-dropdown',\r\n  template: `\r\n    <a class=\"nav-link nav-dropdown-toggle\" appNavDropdownToggle>\r\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\r\n      {{ link.name }}\r\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\r\n    </a>\r\n    <ul class=\"nav-dropdown-items\">\r\n      <ng-template ngFor let-child [ngForOf]=\"link.children\">\r\n        <app-sidebar-nav-item [item]='child'></app-sidebar-nav-item>\r\n      </ng-template>\r\n    </ul>\r\n  `,\r\n  styles: ['.nav-dropdown-toggle { cursor: pointer; }']\r\n})\r\nexport class AppSidebarNavDropdownComponent implements OnInit {\r\n  @Input() link: any;\r\n\r\n  public isBadge() {\r\n    return this.link.badge ? true : false;\r\n  }\r\n\r\n  public isIcon() {\r\n    return this.link.icon ? true : false;\r\n  }\r\n\r\n  constructor( private router: Router, private el: ElementRef ) { }\r\n\r\n  ngOnInit() {\r\n    Replace(this.el);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar-nav-title',\r\n  template: ''\r\n})\r\nexport class AppSidebarNavTitleComponent implements OnInit {\r\n  @Input() title: any;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    const nativeElement: HTMLElement = this.el.nativeElement;\r\n    const li = this.renderer.createElement('li');\r\n    const name = this.renderer.createText(this.title.name);\r\n\r\n    this.renderer.addClass(li, 'nav-title');\r\n\r\n    if ( this.title.class ) {\r\n      const classes = this.title.class;\r\n      this.renderer.addClass(li, classes);\r\n    }\r\n\r\n    if ( this.title.wrapper ) {\r\n      const wrapper = this.renderer.createElement(this.title.wrapper.element);\r\n\r\n      this.renderer.appendChild(wrapper, name);\r\n      this.renderer.appendChild(li, wrapper);\r\n    } else {\r\n      this.renderer.appendChild(li, name);\r\n    }\r\n    this.renderer.appendChild(nativeElement, li);\r\n    Replace(this.el);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule} from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { LayoutModule } from '../shared/layout/layout.module';\n// App Sidebar Component\nimport { AppSidebarFooterComponent } from './app-sidebar-footer.component';\nimport { AppSidebarFormComponent } from './app-sidebar-form.component';\nimport { AppSidebarHeaderComponent } from './app-sidebar-header.component';\nimport { AppSidebarMinimizerComponent } from './app-sidebar-minimizer.component';\nimport { AppSidebarComponent } from './app-sidebar.component';\nimport {\n  AppSidebarNavComponent,\n  AppSidebarNavDropdownComponent,\n  AppSidebarNavItemComponent,\n  AppSidebarNavLinkComponent,\n  AppSidebarNavTitleComponent,\n  NavDropdownDirective,\n  NavDropdownToggleDirective\n} from './app-sidebar-nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    LayoutModule\n  ],\n  exports: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective,\n    LayoutModule\n  ],\n  declarations: [\n    AppSidebarFooterComponent,\n    AppSidebarFormComponent,\n    AppSidebarHeaderComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarMinimizerComponent,\n    AppSidebarComponent,\n    AppSidebarNavComponent,\n    AppSidebarNavDropdownComponent,\n    AppSidebarNavItemComponent,\n    AppSidebarNavLinkComponent,\n    AppSidebarNavTitleComponent,\n    NavDropdownDirective,\n    NavDropdownToggleDirective\n  ]\n})\nexport class AppSidebarModule { }\n"]}