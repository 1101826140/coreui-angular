{"version":3,"file":"app-sidebar-nav.component.js","sourceRoot":"","sources":["../../src/sidebar/app-sidebar-nav.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { Replace } from './../shared';\n\n@Directive({\n  selector: '[appNavDropdown]'\n})\nexport class NavDropdownDirective {\n\n  constructor(private el: ElementRef) { }\n\n  toggle() {\n    this.el.nativeElement.classList.toggle('open');\n  }\n}\n\n/**\n* Allows the dropdown to be toggled via click.\n*/\n@Directive({\n  selector: '[appNavDropdownToggle]'\n})\nexport class NavDropdownToggleDirective {\n  constructor(private dropdown: NavDropdownDirective) {}\n\n  @HostListener('click', ['$event'])\n  toggleOpen($event: any) {\n    $event.preventDefault();\n    this.dropdown.toggle();\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav',\n  template: `\n    <ul class=\"nav\">\n      <ng-template ngFor let-navitem [ngForOf]=\"navItems\">\n        <li *ngIf=\"isDivider(navitem)\" class=\"nav-divider\"></li>\n        <ng-template [ngIf]=\"isTitle(navitem)\">\n          <app-sidebar-nav-title [title]='navitem'></app-sidebar-nav-title>\n        </ng-template>\n        <ng-template [ngIf]=\"!isDivider(navitem)&&!isTitle(navitem)\">\n          <app-sidebar-nav-item [item]='navitem'></app-sidebar-nav-item>\n        </ng-template>\n      </ng-template>\n    </ul>`\n})\nexport class AppSidebarNavComponent {\n  @Input() navItems: any;\n\n  @HostBinding('class.sidebar-nav') true;\n  @HostBinding('attr.role') role = 'nav';\n\n  public isDivider(item) {\n    return item.divider ? true : false;\n  }\n\n  public isTitle(item) {\n    return item.title ? true : false;\n  }\n\n  constructor() { }\n}\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar-nav-item',\n  template: `\n    <li *ngIf=\"!isDropdown(); else dropdown\" [ngClass]=\"hasClass() ? 'nav-item ' + item.class : 'nav-item'\">\n      <app-sidebar-nav-link [link]='item'></app-sidebar-nav-link>\n    </li>\n    <ng-template #dropdown>\n      <li [ngClass]=\"hasClass() ? 'nav-item nav-dropdown ' + item.class : 'nav-item nav-dropdown'\"\n          [class.open]=\"isActive()\"\n          routerLinkActive=\"open\"\n          appNavDropdown>\n        <app-sidebar-nav-dropdown [link]='item'></app-sidebar-nav-dropdown>\n      </li>\n    </ng-template>\n    `\n})\nexport class AppSidebarNavItemComponent implements OnInit {\n  @Input() item: any;\n\n  public hasClass() {\n    return this.item.class ? true : false;\n  }\n\n  public isDropdown() {\n    return this.item.children ? true : false;\n  }\n\n  public thisUrl() {\n    return this.item.url;\n  }\n\n  public isActive() {\n    return this.router.isActive(this.thisUrl(), false);\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n\n}\n\n@Component({\n  selector: 'app-sidebar-nav-link',\n  template: `\n    <a *ngIf=\"!isExternalLink(); else external\"\n      [ngClass]=\"hasVariant() ? 'nav-link nav-link-' + link.variant : 'nav-link'\"\n      routerLinkActive=\"active\"\n      [routerLink]=\"[link.url]\"\n      (click)=\"hideMobile()\">\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ng-template #external>\n      <a [ngClass]=\"hasVariant() ? 'nav-link nav-link-' + link.variant : 'nav-link'\" href=\"{{link.url}}\">\n        <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n        {{ link.name }}\n        <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n      </a>\n    </ng-template>\n  `\n})\nexport class AppSidebarNavLinkComponent implements OnInit {\n  @Input() link: any;\n\n  public hasVariant() {\n    return this.link.variant ? true : false;\n  }\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isExternalLink() {\n    return this.link.url.substring(0, 4) === 'http' ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  public hideMobile() {\n    if (document.body.classList.contains('sidebar-mobile-show')) {\n      document.body.classList.toggle('sidebar-mobile-show');\n    }\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-dropdown',\n  template: `\n    <a class=\"nav-link nav-dropdown-toggle\" appNavDropdownToggle>\n      <i *ngIf=\"isIcon()\" class=\"nav-icon {{ link.icon }}\"></i>\n      {{ link.name }}\n      <span *ngIf=\"isBadge()\" [ngClass]=\"'badge badge-' + link.badge.variant\">{{ link.badge.text }}</span>\n    </a>\n    <ul class=\"nav-dropdown-items\">\n      <ng-template ngFor let-child [ngForOf]=\"link.children\">\n        <app-sidebar-nav-item [item]='child'></app-sidebar-nav-item>\n      </ng-template>\n    </ul>\n  `\n})\nexport class AppSidebarNavDropdownComponent implements OnInit {\n  @Input() link: any;\n\n  public isBadge() {\n    return this.link.badge ? true : false;\n  }\n\n  public isIcon() {\n    return this.link.icon ? true : false;\n  }\n\n  constructor( private router: Router, private el: ElementRef ) { }\n\n  ngOnInit() {\n    Replace(this.el);\n  }\n}\n\n@Component({\n  selector: 'app-sidebar-nav-title',\n  template: ''\n})\nexport class AppSidebarNavTitleComponent implements OnInit {\n  @Input() title: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit() {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    const li = this.renderer.createElement('li');\n    const name = this.renderer.createText(this.title.name);\n\n    this.renderer.addClass(li, 'nav-title');\n\n    if ( this.title.class ) {\n      const classes = this.title.class;\n      this.renderer.addClass(li, classes);\n    }\n\n    if ( this.title.wrapper ) {\n      const wrapper = this.renderer.createElement(this.title.wrapper.element);\n\n      this.renderer.appendChild(wrapper, name);\n      this.renderer.appendChild(li, wrapper);\n    } else {\n      this.renderer.appendChild(li, name);\n    }\n    this.renderer.appendChild(nativeElement, li);\n    Replace(this.el);\n  }\n}\n"]}